{"version":3,"sources":["components/Chat/Chat.module.css","components/FileManager/FileManager.module.css","components/ChatMessage/ChatMessage.module.css","components/NotificationPanel/NotificationPanel.module.css","components/ClosedNotice/ClosedNotice.module.css","components/ClosedNotificationPanel/ClosedNotificationPanel.module.css","components/WorkSpaceItem/WorkSapceItem.module.css","components/ContextMenu/ContextMenu.module.css","components/WorkSpace/WorkSpace.module.css","components/WorkSpaceItem/WorkSpaceItem.tsx","components/App/AppContext.tsx","components/ContextMenu/ContextMenu.tsx","components/FileManager/FileManager.tsx","components/Editor/Editor.tsx","components/Notification/Notification.tsx","components/ChatMessage/ChatMessage.tsx","components/Chat/Chat.tsx","components/Notice/Notice.tsx","components/NotificationPanel/NotificationPanel.tsx","components/ClosedNotice/ClosedNotice.tsx","components/ClosedNotificationPanel/ClosedNotificationPanel.tsx","components/EditorNotice/EditorNotice.tsx","components/NoticeEditor/NoticeEditor.tsx","components/NoticeAddComponent/NoticeAddComponent.tsx","components/ToolPanel/ToolPanel.tsx","components/OutputWindow/OutputWindow.tsx","components/WorkSpace/WorkSpace.tsx","components/LayoutComponent/LayoutComponent.tsx","components/App/App.tsx","index.tsx","components/ToolPanel/ToolPanel.module.css","components/OutputWindow/OutputWindow.module.css"],"names":["module","exports","ITEM","React","createRef","WorkSpaceItem","children","size","width","height","nextSize","setSize","setNextSize","useEffect","current","offsetWidth","ref","className","Style","style","Context","isNoticeAddWindowOpened","noticePos","startColumn","startLineNumber","endColumn","endLineNumber","lineRange","from","to","scrollInfo","left","top","clientWidth","clientHeight","isSrcollEventActive","fileManagerOpenedFile","content","decorations","placement","username","ContextState","context","setContext","AppContext","createContext","useAppContext","useContext","Text","Typography","ContextMenu","title","trigger","visible","data","action","fileItem","onVisibleChange","defaultVisible","dataSource","renderItem","item","Item","List_item","last","border","onClick","e","disabled","id","el","DirectoryTree","Tree","TreeDataItem","props","key","isLeaf","icon","this","isStreamer","openFile","cutFile","copyFile","renameFile","deleteFile","VIEW_TYPE","console","log","Monaco","Editor","FileManager","setExpanded","expanded","useState","setOpened","Emitter","on","openFileByPath","path","fileInfo","getFileInfoByPath","emit","flatData","flatDataArray","flatted","forEach","isDirectory","concat","push","getIconFromExtAndType","ext","FolderOpenOutlined","FolderOutlined","FileOutlined","filter","switcherIcon","DownOutlined","showIcon","blockNode","defaultExpandedKeys","treeData","getTreeDataFromData","name","onSelect","keys","info","node","toString","onExpand","stringKeys","map","onRightClick","defaultSelectedKeys","openNotification","message","description","type","notification","EditorComponent","value","setValue","EditorRef","useRef","MonacoRef","setEditorData","file","model","getModel","editor","setModelLanguage","getModeFromExt","getFileContent","defaultLanguage","defaultValue","theme","onChange","ev","socketRef","onMount","monaco","addAction","label","contextMenuGroupId","contextMenuOrder","run","sel","getSelection","keybindings","KeyMod","CtrlCmd","KeyCode","KEY_S","axios","post","filePath","getValue","then","catch","updateOptions","roundedSelection","scrollBeyondLastLine","smoothScrolling","readOnly","defineTheme","base","inherit","rules","colors","setTheme","onDidScrollChange","ChatMessage","date","author","avatar","UserOutlined","datetime","ChatMessage_Date","TextArea","Input","Chat","messages","setMessageArr","sourceMessages","setMessageCount","inputText","setInputText","Scroll","scrollTo","duration","delay","smooth","containerId","preventDefault","Date","toLocaleString","Messages","index","messageToReactNode","showCount","allowClear","maxLength","target","onPressEnter","autoSize","maxRows","minRows","marginTop","Meta","Card","Notice","closeNotice","openNotice","onCodeClick","actions","CodeOutlined","CloseCircleOutlined","desc","NotificationPanel","setNoticeCount","setClosedNoticeArr","setNoticeArr","find","length","prev","reverse","Notice_Wrapper","Paragraph","ClosedNotice","isExpand","setIsExpand","toggleMeta","ellipsis","ClosedNotice_Text","extra","ClosedNotificationPanel","EditorNotice","isOpened","setIsOpened","contentWidget","destroyTooltipOnHide","strong","fontSize","padding","maxWidth","justifyContent","deltaDecorations","removeContentWidget","NoticeEditor","lineStart","lineCount","minimap","enabled","lineNumbers","num","bottom","EDITOR_PADDING","layout","labelCol","span","wrapperCol","editorLayout","offset","NoticeAddComponent","createNotice","Form","useForm","form","closable","destroyOnClose","onClose","footer","textAlign","marginRight","htmlType","resetFields","onFinish","values","required","rows","minHeight","undefined","selectedLinesText","i","getLineContent","getValueOfSelection","closedData","position","currentFile","directory","openedToolVar","isOpenedToolVar","newMessages","updateNum","noticePoint","document","createElement","ToolPanel","setToolPanelSize","isNoticeOpened","setIsNoticeOpened","openedTool","setOpenedTool","noticeCount","messageCount","setMesssageCount","messageArr","closedNoticeArr","noticeArr","openedNoticeId","setOpenedNoticeId","expandedKeys","setExpandedKeys","setPlacement","filesArr","setFilesArr","update","setUpdate","popover","getElementsByClassName","offsetTop","scrollTop","parent","closest","classList","contains","offsetHeight","get","json","sort","a","b","err","tools","Badge","count","overflowCount","WechatOutlined","ToolPanel_Icons","CameraOutlined","SettingOutlined","BellOutlined","BookOutlined","notice","getNoticeFromId","revealLineInCenter","place","getScrollTop","getId","getDomNode","getPosition","lineNumber","column","preference","ContentWidgetPositionPreference","ABOVE","BELOW","addContentWidget","range","options","isWholeLine","marginClassName","glyphMarginClassName","hoverMessage","openToolPanel","TOOL_PANEL_WIDTH","onIconClick","Wrapper","ToolPanel_Space","minWidth","direction","Icon","toolsToComponents","ToolPanel_OpenedTool","getToolComponentByName","ReactDOM","createPortal","pos","Question","Description","stateNum","stateOutputNum","consoleValueString","OutputWindow","state","setState","stateOutput","setStateOutput","consoleValue","setConsoleValue","consoleOutputHeight","setConsoleOutputHeight","consoleOutputOverflow","setConsoleOutputOverflow","iframeHeight","setIframeHeight","isCollaped","setIsCollaped","handler","window","addEventListener","response","source","parsed","url","split","ConsoleItem","code","error","stack","underline","fileAndLine","lineNo","slice","JSON","stringify","join","off","collapseConsole","backgroundColor","src","frameBorder","overflow","Console","ConsoleMenu","color","margin","ConsoleMenuButtons","ClearOutlined","Button","VerticalAlignTopOutlined","VerticalAlignBottomOutlined","ConsoleOutput","WorkSpace","toolPanelSize","editorSize","setEditorSize","outputSize","setOutputSize","Content","Layout","LayoutComponent","confirm","EventEmitter","App","contextState","setContextState","io","reconnection","transports","query","roomId","reason","disconnect","Provider","dotenv","config","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6f930379.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Chat\":\"Chat_Chat__bFHYn\",\"Messages\":\"Chat_Messages__1pTSF\",\"Input\":\"Chat_Input__1ctf5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FileManager\":\"FileManager_FileManager__1dVwd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ChatMessage\":\"ChatMessage_ChatMessage__k57rQ\",\"ChatMessage_Date\":\"ChatMessage_ChatMessage_Date__2w_f9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Notice\":\"NotificationPanel_Notice__25aD5\",\"Notice_Wrapper\":\"NotificationPanel_Notice_Wrapper__hy2nl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ClosedNotice_Text\":\"ClosedNotice_ClosedNotice_Text__3b3JK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Notice\":\"ClosedNotificationPanel_Notice__17fAd\",\"Notice_Wrapper\":\"ClosedNotificationPanel_Notice_Wrapper__2UMAr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"WorkSpaceItem\":\"WorkSapceItem_WorkSpaceItem__3kt83\",\"WorkSpaceItem_Resizer\":\"WorkSapceItem_WorkSpaceItem_Resizer__2hhhU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"List_item\":\"ContextMenu_List_item__1KZa1\",\"ContextMenuPoint\":\"ContextMenu_ContextMenuPoint__3ywRb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"WorkSpace\":\"WorkSpace_WorkSpace__1F33P\",\"WorkSpace__wrapper_vertical\":\"WorkSpace_WorkSpace__wrapper_vertical__1JJDr\"};","import React, { DOMElement, FC, ReactNode, useState, useEffect } from \"react\";\r\nimport Style from \"./WorkSapceItem.module.css\";\r\nimport Dragable, { DraggableEvent } from \"react-draggable\";\r\nimport { Size } from \"../WorkSpace/WorkSpace\";\r\n\r\ninterface Props {\r\n  children?: ReactNode;\r\n  size?: Size;\r\n  nextSize: Size;\r\n  setSize: (size: Size) => void;\r\n  setNextSize: (size: Size) => void;\r\n}\r\n\r\nlet startPos: number;\r\nlet offset: number;\r\nlet percent: number = 50;\r\nlet width: number;\r\nconst ITEM = React.createRef<HTMLDivElement>();\r\n\r\nconst WorkSpaceItem: FC<Props> = ({\r\n  children,\r\n  size = { width: \"100%\", height: \"100%\" },\r\n  nextSize,\r\n  setSize,\r\n  setNextSize,\r\n}: Props) => {\r\n  const onDragStart = (e: DraggableEvent): void => {\r\n    // console.log(e);\r\n    startPos = (e as MouseEvent).clientX;\r\n  };\r\n  const onDragEnd = (e: DraggableEvent): void => {\r\n    // console.log(e);\r\n  };\r\n  const onDrag = (e: DraggableEvent): void => {\r\n    // console.log(e);\r\n    let pos: number = (e as MouseEvent).clientX;\r\n    offset = pos - startPos;\r\n    let newWidth: number = width + offset;\r\n\r\n    console.log(percent, width);\r\n\r\n    let newPercent: number = (newWidth * percent) / width;\r\n\r\n    console.log(\"new:\", newPercent);\r\n\r\n    setNextSize({ ...nextSize, width: 100 - newPercent + \"%\" });\r\n    setSize({ ...size, width: newPercent + \"%\" });\r\n  };\r\n\r\n  useEffect(() => {\r\n    width = ITEM.current?.offsetWidth || 0;\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      ref={ITEM}\r\n      className={Style.WorkSpaceItem}\r\n      style={{ ...size }}\r\n    >\r\n      {children}\r\n      {/* <Dragable\r\n        axis=\"x\"\r\n        scale={2}\r\n        onStart={onDragStart}\r\n        onDrag={onDrag}\r\n        onStop={onDragEnd}\r\n      >\r\n        <div className={Style.WorkSpaceItem_Resizer}></div>\r\n      </Dragable> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WorkSpaceItem;\r\n","import { TooltipPlacement } from \"antd/lib/tooltip\";\r\nimport { Position } from \"codemirror\";\r\nimport { createContext, useContext, useState } from \"react\";\r\nimport { FileInfo } from \"../ToolPanel/ToolPanel\";\r\n\r\nexport const Context = {\r\n  isNoticeAddWindowOpened: false,\r\n  noticePos: {\r\n    startColumn: 0,\r\n    startLineNumber: 0,\r\n    endColumn: 0,\r\n    endLineNumber: 0,\r\n  },\r\n  lineRange: {\r\n    from: 0,\r\n    to: 0,\r\n  },\r\n  scrollInfo: {\r\n    left: 0,\r\n    top: 0,\r\n    width: 0,\r\n    height: 0,\r\n    clientWidth: 0,\r\n    clientHeight: 0,\r\n  },\r\n  isSrcollEventActive: false,\r\n  fileManagerOpenedFile: { content: \"\" } as FileInfo,\r\n  decorations: [] as string[],\r\n  placement: \"topLeft\" as TooltipPlacement,\r\n  username: \"\"\r\n};\r\n\r\nexport type AppContextType = typeof Context;\r\n\r\nexport type ContextStateType = {\r\n  context: AppContextType;\r\n  setContext: React.Dispatch<React.SetStateAction<AppContextType>>;\r\n};\r\n\r\nexport const ContextState: ContextStateType = {\r\n  context: Context,\r\n  setContext: () => {},\r\n};\r\nconst AppContext = createContext<ContextStateType>(ContextState);\r\n\r\nexport const useAppContext = (): ContextStateType =>\r\n  useContext<ContextStateType>(AppContext);\r\n\r\nexport default AppContext;\r\n","import React, { ReactNode, FC } from \"react\";\r\nimport { Popover, List } from \"antd\";\r\nimport { TooltipPlacement } from \"antd/lib/tooltip\";\r\nimport Style from \"./ContextMenu.module.css\";\r\nimport { Typography } from \"antd\";\r\n\r\nconst { Text } = Typography;\r\n\r\ninterface Props {\r\n  data: any[];\r\n  action: any[];\r\n  children?: ReactNode | string;\r\n  title?: string;\r\n  placement?: TooltipPlacement;\r\n  trigger?: string;\r\n  visible?: boolean;\r\n  fileItem: any;\r\n  onVisibleChange?: (visible: boolean) => void;\r\n}\r\n\r\nconst ContextMenu: FC<Props> = ({\r\n  children,\r\n  title = \"Context menu\",\r\n  placement = \"rightBottom\",\r\n  trigger = \"contextMenu\",\r\n  visible = false,\r\n  data,\r\n  action,\r\n  fileItem,\r\n  onVisibleChange,\r\n}: Props) => {\r\n  return (\r\n      <Popover\r\n        placement={placement}\r\n        defaultVisible={visible}\r\n        onVisibleChange={onVisibleChange}\r\n        content={\r\n          <List\r\n            size=\"small\"\r\n            dataSource={data}\r\n            renderItem={(item: any) => {\r\n              return (\r\n                <List.Item\r\n                  className={Style.List_item}\r\n                  style={!item.last ? { border: \"none\" } : {}}\r\n                >\r\n                  <div\r\n                    key={item.id}\r\n                    onClick={(e) => {\r\n                      if (!item.disabled) action[item.id](e, fileItem);\r\n                    }}\r\n                  >\r\n                    {<Text disabled={item.disabled}>{item.el}</Text>}\r\n                  </div>\r\n                </List.Item>\r\n              );\r\n            }}\r\n          />\r\n        }\r\n        title={title}\r\n        trigger={trigger}\r\n      >\r\n        {children}\r\n      </Popover>\r\n  );\r\n};\r\n\r\nexport default ContextMenu;\r\n","import React, { ReactNode, useEffect, useState } from \"react\";\r\nimport { Tree } from \"antd\";\r\nimport ContextMenu from \"../ContextMenu/ContextMenu\";\r\nimport Style from \"./FileManager.module.css\";\r\nimport { FileInfo } from \"../ToolPanel/ToolPanel\";\r\nimport { Context, useAppContext } from \"../App/AppContext\";\r\nimport {\r\n  DownOutlined,\r\n  FileOutlined,\r\n  FolderOpenOutlined,\r\n  FolderOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { DiHtml5, DiCss3, DiJavascript1 } from \"react-icons/di\";\r\nimport { GrDocumentTxt } from \"react-icons/gr\";\r\nimport { AntTreeNode } from \"antd/lib/tree\";\r\nimport { Emitter, VIEW_TYPE } from \"../App/App\";\r\nconst { DirectoryTree } = Tree;\r\n\r\ninterface Props {\r\n  data: FileInfo[];\r\n  expanded: string[];\r\n  setExpanded: (keys: string[]) => void;\r\n}\r\ninterface TreeData {\r\n  title: string | ReactNode;\r\n  key: string;\r\n  isLeaf?: boolean;\r\n  children?: TreeData[];\r\n  icon?: ReactNode;\r\n}\r\nclass TreeDataItem implements TreeData {\r\n  title: string | ReactNode;\r\n  key: string;\r\n  isLeaf?: boolean;\r\n  children?: TreeData[];\r\n  icon: ReactNode;\r\n\r\n  constructor(props: TreeData) {\r\n    this.key = props.key;\r\n    this.isLeaf = props.isLeaf;\r\n    this.children = props.children;\r\n    this.icon = props.icon;\r\n    this.title = (\r\n      <ContextMenu\r\n        data={[\r\n          { el: \"Open\", disabled: false, last: true, id: 0 },\r\n          { el: \"Cut\", disabled: !isStreamer(), last: false, id: 1 },\r\n          { el: \"Copy\", disabled: !isStreamer(), last: true, id: 2 },\r\n          { el: \"Rename\", disabled: !isStreamer(), last: false, id: 3 },\r\n          { el: \"Delete\", disabled: !isStreamer(), last: true, id: 4 },\r\n        ]}\r\n        action={[openFile, cutFile, copyFile, renameFile, deleteFile]}\r\n        fileItem={this}\r\n      >\r\n        {props.title}\r\n      </ContextMenu>\r\n    );\r\n  }\r\n}\r\n\r\nfunction isStreamer(): boolean {\r\n  return VIEW_TYPE === \"streamer\";\r\n}\r\n\r\nfunction openFile(e: any, fileItem: TreeData) {\r\n  console.log(fileItem);\r\n}\r\nfunction cutFile(e: any) {}\r\nfunction copyFile(e: any) {}\r\nfunction renameFile(e: any) {}\r\nfunction deleteFile(e: any) {}\r\n\r\nconst FileManager = ({ data, setExpanded, expanded }: Props) => {\r\n  const [openedFile, setOpened] = useState<FileInfo>(\r\n    Context.fileManagerOpenedFile\r\n  );\r\n\r\n  useEffect(() => {\r\n    Emitter.on(\"notice_open_file\", (e) => {\r\n      openFileByPath(e.path); \r\n    });\r\n  }, []);\r\n\r\n  const openFileByPath = (path: string) => {\r\n    let fileInfo: FileInfo = getFileInfoByPath(path);\r\n\r\n    if (fileInfo) {\r\n      Context.fileManagerOpenedFile = fileInfo;\r\n      Emitter.emit(\"open_file\", fileInfo);\r\n      setOpened(fileInfo);\r\n    }\r\n  };\r\n\r\n  const flatDataArray = (data: FileInfo[]): FileInfo[] => {\r\n    let flatted: FileInfo[] = [];\r\n\r\n    data.forEach((item) => {\r\n      if (item.isDirectory) {\r\n        flatted = flatted.concat(flatDataArray(item.children));\r\n      } else {\r\n        flatted.push(item);\r\n      }\r\n    });\r\n\r\n    return flatted;\r\n  };\r\n\r\n  const flatData = flatDataArray(data);\r\n\r\n  const onSelect = (keys: React.Key[], info: any) => {\r\n    if (info.node.isLeaf) {\r\n      openFileByPath(keys[0].toString());\r\n    }\r\n  };\r\n\r\n  const onExpand = (keys: React.Key[]) => {\r\n    let stringKeys: string[] = keys.map((item) => item.toString());\r\n    setExpanded(stringKeys);\r\n  };\r\n\r\n  const getIconFromExtAndType = (\r\n    ext: string,\r\n    isDirectory: boolean\r\n  ): ReactNode | ((item: any) => ReactNode) => {\r\n    if (isDirectory) {\r\n      return (item) => {\r\n        if (item.expanded) return <FolderOpenOutlined />;\r\n        return <FolderOutlined />;\r\n      };\r\n    }\r\n    switch (ext) {\r\n      case \".html\":\r\n        return <DiHtml5 />;\r\n      case \".css\":\r\n        return <DiCss3 />;\r\n      case \".js\":\r\n        return <DiJavascript1 />;\r\n      case \".txt\":\r\n        return <GrDocumentTxt />;\r\n      default:\r\n        return <FileOutlined />;\r\n    }\r\n  };\r\n\r\n  const getTreeDataFromData = (data: FileInfo[]): TreeData[] => {\r\n    let treeData: TreeData[] = [];\r\n\r\n    data.forEach((item) => {\r\n      let ext = item.ext || \"\";\r\n      let data: TreeData = new TreeDataItem({\r\n        title: item.name + ext,\r\n        key: item.path,\r\n        isLeaf: !item.isDirectory,\r\n        icon: getIconFromExtAndType(ext, item.isDirectory),\r\n      });\r\n      if (item.isDirectory) {\r\n        data.children = getTreeDataFromData(item.children);\r\n      }\r\n      treeData.push(data);\r\n    });\r\n\r\n    return treeData;\r\n  };\r\n\r\n  const getFileInfoByPath = (path: string): FileInfo => {\r\n    return flatData.filter((item) => item.path === path)[0];\r\n  };\r\n\r\n  const onRightClick = (e: any) => {};\r\n\r\n  return (\r\n    <div className={Style.FileManager}>\r\n      <DirectoryTree\r\n        className={Style.Tree}\r\n        // showLine\r\n        switcherIcon={<DownOutlined />}\r\n        showIcon={true}\r\n        blockNode\r\n        defaultExpandedKeys={expanded}\r\n        treeData={getTreeDataFromData(data)}\r\n        onSelect={onSelect}\r\n        onExpand={onExpand}\r\n        onRightClick={onRightClick}\r\n        defaultSelectedKeys={[Context.fileManagerOpenedFile.path]}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileManager;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport MonacoEditor, { OnMount } from \"@monaco-editor/react\";\r\nimport { Context, useAppContext } from \"../App/AppContext\";\r\nimport {} from \"../FileManager/FileManager\";\r\nimport { Emitter, socketRef, VIEW_TYPE } from \"../App/App\";\r\nimport { FileInfo } from \"../ToolPanel/ToolPanel\";\r\nimport axios from \"axios\";\r\nimport { openNotification } from \"../Notification/Notification\";\r\n\r\ntype EditorDidMountParams = Parameters<OnMount>;\r\n\r\nexport let Monaco: EditorDidMountParams[1];\r\nexport let Editor: EditorDidMountParams[0];\r\nexport const scrollInfo: any = {};\r\n\r\nconst EditorComponent = () => {\r\n  const { context, setContext } = useAppContext();\r\n  const [value, setValue] = useState<string>(\"\");\r\n  const EditorRef = useRef<EditorDidMountParams[0]>();\r\n  const MonacoRef = useRef<EditorDidMountParams[1]>();\r\n\r\n  useEffect(() => {\r\n    setEditorData(Context.fileManagerOpenedFile);\r\n    Emitter.on(\"open_file\", (file: FileInfo) => {\r\n      setEditorData(file);\r\n    });\r\n    Emitter.on(\"editor_update\", (data) => {\r\n      setValue(data.value);\r\n    });\r\n  }, []);\r\n\r\n  function setEditorData(file: FileInfo): void {\r\n    if (Editor) {\r\n      let model = Editor.getModel();\r\n\r\n      if (model) {\r\n        Monaco.editor.setModelLanguage(model, getModeFromExt(file.ext));\r\n        setValue(getFileContent(file));\r\n      }\r\n    }\r\n  }\r\n\r\n  function getFileContent(file: FileInfo): string {\r\n    return typeof file.content === \"object\" ? \"\" : file.content;\r\n  }\r\n\r\n  function getModeFromExt(ext: string | undefined): string {\r\n    switch (ext) {\r\n      case \".js\":\r\n        return \"javascript\";\r\n      case \".css\":\r\n        return \"text/css\";\r\n      case \".html\":\r\n        return \"text/html\";\r\n      default:\r\n        return \"\";\r\n    }\r\n  }\r\n\r\n  const onChange = (value: any, ev: any): void => {\r\n    setValue(value);\r\n    socketRef.current?.emit(\"editor_data\", {\r\n      value,\r\n      file: Context.fileManagerOpenedFile.path,\r\n    });\r\n  };\r\n\r\n  const handleEditorDidMount = (\r\n    editor: EditorDidMountParams[0],\r\n    monaco: EditorDidMountParams[1]\r\n  ) => {\r\n    EditorRef.current = editor;\r\n    MonacoRef.current = monaco;\r\n\r\n    Monaco = monaco;\r\n    Editor = editor;\r\n\r\n    editor.addAction({\r\n      id: \"addNotice\",\r\n      label: \"Add Notice\",\r\n      contextMenuGroupId: \"2_modification\",\r\n      contextMenuOrder: 0,\r\n      run: (editor: EditorDidMountParams[0]) => {\r\n        let sel = editor.getSelection();\r\n\r\n        if (sel !== null) {\r\n          Context.noticePos = sel;\r\n          Context.isNoticeAddWindowOpened = true;\r\n\r\n          Emitter.emit(\"open_notice_add\");\r\n        }\r\n      },\r\n    });\r\n\r\n    editor.addAction({\r\n      id: \"saveAaction\",\r\n      label: \"Save Current File\",\r\n      contextMenuGroupId: \"9_cutcopypaste\",\r\n      contextMenuOrder: 0,\r\n      keybindings: [monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_S],\r\n      run: (editor: EditorDidMountParams[0]) => {\r\n        if (VIEW_TYPE === \"streamer\") {\r\n          axios\r\n            .post(\"http://localhost:4000/savefile\", {\r\n              filePath: Context.fileManagerOpenedFile.path,\r\n              content: editor.getValue(),\r\n            })\r\n            .then(() => {\r\n              // openNotification({\r\n              //   message: \"File saved!\",\r\n              //   description: \"File saved at \" + new Date().toLocaleString(),\r\n              //   type: \"success\",\r\n              // });\r\n\r\n              Emitter.emit(\"output_reload\");\r\n            })\r\n            .catch(() => {\r\n              openNotification({\r\n                message: \"Save file error!\",\r\n                description: \"Unexpected error saving file!\",\r\n                type: \"error\",\r\n              });\r\n            });\r\n        }\r\n      },\r\n    });\r\n\r\n    editor.updateOptions({\r\n      roundedSelection: true,\r\n      scrollBeyondLastLine: false,\r\n      smoothScrolling: true,\r\n      readOnly: VIEW_TYPE == \"streamer\" ? false : true,\r\n    });\r\n\r\n    monaco.editor.defineTheme(\"vs-dark-custom\", {\r\n      base: \"vs-dark\",\r\n      inherit: true,\r\n      rules: [],\r\n      colors: {\r\n        \"editor.selectionBackground\": \"#e6e6e625\",\r\n        \"editor.inactiveSelectionBackground\": \"#e6e6e615\",\r\n      },\r\n    });\r\n    monaco.editor.setTheme(\"vs-dark-custom\");\r\n\r\n    editor.onDidScrollChange((e) => {\r\n      if (Context.isSrcollEventActive) {\r\n        Emitter.emit(\"notice_will_scroll\", e);\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <MonacoEditor\r\n        className={\"CodeMirror_custom\"}\r\n        defaultLanguage=\"javascript\"\r\n        defaultValue=\"\"\r\n        theme=\"vs-dark\"\r\n        value={value}\r\n        onChange={onChange}\r\n        onMount={handleEditorDidMount}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditorComponent;\r\n","import { notification } from \"antd\";\r\nimport { NotificationPlacement } from \"antd/lib/notification\";\r\nimport { ReactNode } from \"react\";\r\n\r\nexport type NotificationType =\r\n  | \"success\"\r\n  | \"error\"\r\n  | \"info\"\r\n  | \"warning\"\r\n  | \"warn\"\r\n  | \"open\";\r\n\r\ninterface Args {\r\n  message: string | ReactNode;\r\n  description: string | ReactNode;\r\n  type: NotificationType;\r\n  placement?: NotificationPlacement;\r\n}\r\n\r\nexport const openNotification = ({\r\n  message,\r\n  description,\r\n  type,\r\n  placement = \"bottomLeft\",\r\n}: Args) => {\r\n  notification[type]({\r\n    message,\r\n    description,\r\n    placement,\r\n  });\r\n};\r\n\r\n\r\n","import React from \"react\";\r\nimport { Comment, Avatar } from \"antd\";\r\nimport { UserOutlined } from \"@ant-design/icons\";\r\nimport Style from \"./ChatMessage.module.css\";\r\n\r\ninterface Props {\r\n  title: string;\r\n  content: string;\r\n  date: string\r\n}\r\n\r\nconst ChatMessage = ({ title, content, date }: Props) => {\r\n  return (\r\n    <div className={Style.ChatMessage}>\r\n      <Comment\r\n        author={title}\r\n        avatar={<Avatar icon={<UserOutlined />} />}\r\n        content={<p>{content}</p>}\r\n        datetime={<div className={Style.ChatMessage_Date}>{date}</div>}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatMessage;\r\n","import React, { useState, ReactNode, useEffect } from \"react\";\r\nimport ChatMessage from \"../ChatMessage/ChatMessage\";\r\nimport Style from \"./Chat.module.css\";\r\nimport { Input, Button } from \"antd\";\r\nimport Draggable from \"react-draggable\";\r\nimport { Message } from \"../ToolPanel/ToolPanel\";\r\nimport * as Scroll from \"react-scroll\";\r\nimport { Emitter } from \"../App/App\";\r\nimport { Context } from \"../App/AppContext\";\r\n\r\nconst { TextArea } = Input;\r\n\r\ninterface Props {\r\n  messages: Message[];\r\n  sourceMessages: Message[];\r\n  setMessageArr: (value: Message[]) => void;\r\n  setMessageCount: (value: number) => void;\r\n}\r\n\r\nconst Chat = ({\r\n  messages,\r\n  setMessageArr,\r\n  setMessageCount,\r\n  sourceMessages,\r\n}: Props) => {\r\n  const [inputText, setInputText] = useState<string>(\"\");\r\n\r\n  const messageToReactNode = (messages: Message[]) => {\r\n    return messages.map((item, index) => (\r\n      <ChatMessage\r\n        content={item.content}\r\n        title={item.title}\r\n        date={item.date}\r\n        key={index}\r\n      />\r\n    ));\r\n  };\r\n\r\n  useEffect(() => {\r\n    Scroll.scroller.scrollTo(\"scrollPointChat\", {\r\n      duration: 0,\r\n      delay: 0,\r\n      smooth: true,\r\n      containerId: \"scrollChat\",\r\n    });\r\n\r\n    Emitter.on(\"chat_message\", (data) => {\r\n      // sourceMessages.push(data);\r\n      // setMessageArr(sourceMessages);\r\n      Scroll.scroller.scrollTo(\"scrollPointChat\", {\r\n        duration: 0,\r\n        delay: 0,\r\n        smooth: true,\r\n        containerId: \"scrollChat\",\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  const onClick = (e: any) => {\r\n    e.preventDefault();\r\n\r\n    if (inputText !== \"\") {\r\n      const message = {\r\n        content: inputText,\r\n        title: Context.username,\r\n        date: new Date().toLocaleString(),\r\n      };\r\n      sourceMessages.push(message);\r\n      setMessageArr(sourceMessages);\r\n      Scroll.scroller.scrollTo(\"scrollPointChat\", {\r\n        duration: 500,\r\n        delay: 0,\r\n        smooth: true,\r\n        containerId: \"scrollChat\",\r\n      });\r\n      Emitter.emit(\"new_chat_message\", message);\r\n      setInputText(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={Style.Chat}>\r\n      <div className={Style.Messages} id=\"scrollChat\">\r\n        {messageToReactNode(messages)}\r\n        {<Scroll.Element name=\"scrollPointChat\" />}\r\n      </div>\r\n      <div className={Style.Input}>\r\n        <TextArea\r\n          showCount\r\n          allowClear\r\n          maxLength={100}\r\n          value={inputText}\r\n          onChange={(e) => {\r\n            setInputText(e.target.value);\r\n          }}\r\n          onPressEnter={onClick}\r\n          autoSize={{ maxRows: 1, minRows: 1 }}\r\n        />\r\n        <Button type=\"primary\" onClick={onClick} style={{ marginTop: 10 }}>\r\n          Send Message\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n","import React from \"react\";\r\nimport { Card, Avatar } from \"antd\";\r\nimport {\r\n  UserOutlined,\r\n  CodeOutlined,\r\n  CloseCircleOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { NoticeItem } from \"../ToolPanel/ToolPanel\";\r\nimport { VIEW_TYPE } from \"../App/App\";\r\n\r\nconst { Meta } = Card;\r\n\r\ninterface Props {\r\n  data: NoticeItem;\r\n  closeNotice: (id: number) => void;\r\n  openNotice: (id: number) => void;\r\n}\r\n\r\nconst Notice = ({ data, closeNotice, openNotice }: Props) => {\r\n  const onCodeClick = () => {\r\n    // Doc.setCursor(70, 11);\r\n    openNotice(data.id);\r\n  };\r\n  const onCloseClick = () => {\r\n    closeNotice(data.id);\r\n  };\r\n  return (\r\n    <>\r\n      <Card\r\n        size=\"small\"\r\n        actions={\r\n          VIEW_TYPE === \"streamer\"\r\n            ? [\r\n                <CodeOutlined key=\"code\" onClick={onCodeClick} />,\r\n                <CloseCircleOutlined key=\"close\" onClick={onCloseClick} />,\r\n              ]\r\n            : [ <CodeOutlined key=\"code\" onClick={onCodeClick} />]\r\n        }\r\n      >\r\n        <Meta\r\n          avatar={<Avatar icon={<UserOutlined />} />}\r\n          title={data.title}\r\n          description={data.desc}\r\n        />\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Notice;\r\n","import React, { ReactNode, useState } from \"react\";\r\nimport { List } from \"antd\";\r\nimport Notice from \"../Notice/Notice\";\r\nimport Style from \"./NotificationPanel.module.css\";\r\nimport { NoticeItem } from \"../ToolPanel/ToolPanel\";\r\ninterface Props {\r\n  setNoticeCount: (count: number) => void;\r\n  setClosedNoticeArr: (prop: any) => void;\r\n  setNoticeArr: (prop: any) => void;\r\n  openNotice: (prop: number) => void;\r\n  data: NoticeItem[];\r\n}\r\n\r\nconst NotificationPanel = ({\r\n  setNoticeCount,\r\n  setClosedNoticeArr,\r\n  setNoticeArr,\r\n  openNotice,\r\n  data,\r\n}: Props) => {\r\n  const closeNotice = (id: number): void => {\r\n    let item: NoticeItem | undefined = data.find((item) => item.id === id);\r\n\r\n    setNoticeArr(data.filter((item) => item.id !== id));\r\n    setNoticeCount(data.length - 1);\r\n    setClosedNoticeArr((prev: any) => {\r\n      return [item, ...prev];\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className={Style.Notice}>\r\n      <List\r\n        dataSource={data.reverse()}\r\n        renderItem={(item) => {\r\n          return (\r\n            <div className={Style.Notice_Wrapper}>\r\n              <Notice\r\n                data={item}\r\n                closeNotice={closeNotice}\r\n                openNotice={openNotice}\r\n              />\r\n            </div>\r\n          );\r\n        }}\r\n        size=\"small\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotificationPanel;\r\n","import React, { useState } from \"react\";\r\nimport { Card, Avatar, Button, Typography } from \"antd\";\r\nimport Style from \"./ClosedNotice.module.css\";\r\nimport { UserOutlined, CodeOutlined } from \"@ant-design/icons\";\r\nimport { NoticeItem } from \"../ToolPanel/ToolPanel\";\r\n\r\ninterface Props {\r\n  data: NoticeItem;\r\n  openNotice: (prop: number) => void;\r\n}\r\n\r\nconst { Meta } = Card;\r\nconst { Text, Paragraph } = Typography;\r\n\r\nconst ClosedNotice = ({ data, openNotice }: Props) => {\r\n  const [isExpand, setIsExpand] = useState(false);\r\n\r\n  const toggleMeta = () => {\r\n    setIsExpand(!isExpand);\r\n  };\r\n\r\n  const onCodeClick = () => {\r\n    openNotice(data.id);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card\r\n        type=\"inner\"\r\n        size=\"small\"\r\n        title={\r\n          <Text ellipsis className={Style.ClosedNotice_Text}>\r\n            {data.title}\r\n          </Text>\r\n        }\r\n        extra={\r\n          isExpand ? (\r\n            <Button size=\"small\" onClick={toggleMeta}>\r\n              Close\r\n            </Button>\r\n          ) : (\r\n            <Button size=\"small\" onClick={toggleMeta}>\r\n              Open\r\n            </Button>\r\n          )\r\n        }\r\n        actions={\r\n          isExpand ? [<CodeOutlined key=\"code\" onClick={onCodeClick} />] : []\r\n        }\r\n      >\r\n        {isExpand ? (\r\n          <Meta\r\n            avatar={<Avatar icon={<UserOutlined />} />}\r\n            description={data.desc}\r\n          />\r\n        ) : (\r\n          <Paragraph ellipsis className={Style.ClosedNotice_Text}>\r\n            {data.desc}\r\n          </Paragraph>\r\n        )}\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ClosedNotice;\r\n","import React, { useState } from \"react\";\r\nimport { List } from \"antd\";\r\nimport ClosedNotice from \"../ClosedNotice/ClosedNotice\";\r\nimport Style from \"./ClosedNotificationPanel.module.css\";\r\nimport { NoticeItem } from \"../ToolPanel/ToolPanel\";\r\n\r\ninterface Props {\r\n  data: NoticeItem[];\r\n  openNotice: (prop: number) => void;\r\n}\r\n\r\nconst ClosedNotificationPanel = ({ data, openNotice }: Props) => {\r\n  return (\r\n    <div className={Style.Notice}>\r\n      <List\r\n        dataSource={data.reverse()}\r\n        renderItem={(item) => (\r\n          <div className={Style.Notice_Wrapper}>\r\n            <ClosedNotice data={item} openNotice={openNotice}/>\r\n          </div>\r\n        )}\r\n        size=\"small\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClosedNotificationPanel;\r\n","import React, { ReactNode, FC, ReactPortal, useEffect, useState } from \"react\";\r\nimport { Popover, Space } from \"antd\";\r\nimport { Typography } from \"antd\";\r\nimport { CloseCircleOutlined } from \"@ant-design/icons\";\r\nimport { NoticeItem } from \"../ToolPanel/ToolPanel\";\r\nimport { Context } from \"../App/AppContext\";\r\nimport { Editor } from \"../Editor/Editor\";\r\nimport { TooltipPlacement } from \"antd/lib/tooltip\";\r\nimport { Emitter } from \"../App/App\";\r\n\r\nconst { Text } = Typography;\r\n\r\ninterface Props {\r\n  children?: ReactNode[] | Element[] | Element | ReactPortal;\r\n  data: NoticeItem;\r\n  isOpened: boolean;\r\n  setIsOpened: (val: boolean) => void;\r\n  contentWidget: any;\r\n  placement: TooltipPlacement;\r\n}\r\n\r\nconst EditorNotice: FC<Props> = ({\r\n  children,\r\n  data,\r\n  isOpened,\r\n  setIsOpened,\r\n  contentWidget,\r\n  placement,\r\n}: Props) => {\r\n  return (\r\n    <Popover\r\n      placement={placement}\r\n      visible={isOpened}\r\n      destroyTooltipOnHide\r\n      content={\r\n        <>\r\n          <div className={\"CoolMan\"}>\r\n            <Text type=\"secondary\" strong style={{ fontSize: \"0.8em\" }}>\r\n              from {data.author}\r\n            </Text>\r\n          </div>\r\n          <div style={{ padding: \"5px 0px\", fontSize: \"1.2em\", maxWidth: 400 }}>\r\n            {data.desc}\r\n          </div>\r\n        </>\r\n      }\r\n      title={\r\n        <Space style={{ width: \"100%\", justifyContent: \"space-between\" }}>\r\n          {data.title}\r\n          {\r\n            <a\r\n              onClick={() => {\r\n                setIsOpened(false);\r\n                Context.isSrcollEventActive = false;\r\n                Context.decorations = Editor.deltaDecorations(\r\n                  Context.decorations,\r\n                  []\r\n                );\r\n                if (contentWidget) Editor.removeContentWidget(contentWidget);\r\n              }}\r\n            >\r\n              <CloseCircleOutlined />\r\n            </a>\r\n          }\r\n        </Space>\r\n      }\r\n      trigger={\"contextMenu\"}\r\n    >\r\n      {children}\r\n    </Popover>\r\n  );\r\n};\r\n\r\nexport default EditorNotice;\r\n","import React from \"react\";\r\nimport \"codemirror/lib/codemirror.css\";\r\nimport \"../Editor/Editor.css\";\r\nimport MonacoEditor, { OnMount } from \"@monaco-editor/react\";\r\n\r\ntype EditorDidMountParams = Parameters<OnMount>;\r\n\r\ninterface Props {\r\n  value: string;\r\n  lineStart: number;\r\n  lineCount: number;\r\n}\r\n\r\nconst EDITOR_PADDING: number = 10;\r\nconst LINE_HEIGHT: number = 19;\r\nconst MAX_LINE_COUNT: number = 12;\r\nconst MAX_LINE_HEIGHT: number = 250;\r\n\r\nconst NoticeEditor = ({ value, lineStart, lineCount }: Props) => {\r\n  const handleEditorDidMount = (\r\n    editor: EditorDidMountParams[0],\r\n    monaco: EditorDidMountParams[1]\r\n  ) => {\r\n    editor.updateOptions({\r\n      roundedSelection: true,\r\n      scrollBeyondLastLine: false,\r\n      readOnly: true,\r\n      minimap: {\r\n        enabled: false,\r\n      },\r\n      lineNumbers: (num) => lineStart + num - 1 + \"\",\r\n      padding: { bottom: EDITOR_PADDING, top: EDITOR_PADDING },\r\n    });\r\n\r\n    monaco.editor.defineTheme(\"vs-dark-custom\", {\r\n      base: \"vs-dark\",\r\n      inherit: true,\r\n      rules: [],\r\n      colors: {\r\n        \"editor.selectionBackground\": \"#e6e6e625\",\r\n        \"editor.inactiveSelectionBackground\": \"#e6e6e615\",\r\n      },\r\n    });\r\n    monaco.editor.setTheme(\"vs-dark-custom\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <MonacoEditor\r\n        className={\"CodeMirror_custom\"}\r\n        defaultLanguage=\"javascript\"\r\n        defaultValue={value}\r\n        theme=\"vs-dark\"\r\n        value={value}\r\n        onMount={handleEditorDidMount}\r\n        height={\r\n          lineCount > MAX_LINE_COUNT\r\n            ? MAX_LINE_HEIGHT\r\n            : (lineCount + 1) * LINE_HEIGHT + EDITOR_PADDING * 2\r\n        }\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NoticeEditor;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Drawer, Form, Input, Space } from \"antd\";\r\nimport { Context, useAppContext } from \"../App/AppContext\";\r\nimport NoticeEditor from \"../NoticeEditor/NoticeEditor\";\r\nimport Text from \"antd/lib/typography/Text\";\r\nimport { Editor, Monaco } from \"../Editor/Editor\";\r\nimport { Emitter } from \"../App/App\";\r\n\r\ninterface Props {\r\n  createNotice: (values: any) => void;\r\n}\r\n\r\nconst { TextArea } = Input;\r\n\r\nconst layout = {\r\n  labelCol: { span: 8 },\r\n  wrapperCol: { span: 16 },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: { span: 16 },\r\n};\r\nconst editorLayout = {\r\n  wrapperCol: { offset: 0, span: 24 },\r\n};\r\n\r\nconst NoticeAddComponent = ({ createNotice }: Props) => {\r\n  const { context, setContext } = useAppContext();\r\n  const [isOpened, setIsOpened] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    Emitter.on(\"open_notice_add\", () => {\r\n      setIsOpened(Context.isNoticeAddWindowOpened);\r\n    });\r\n    setIsOpened(Context.isNoticeAddWindowOpened);\r\n  });\r\n\r\n  const [form] = Form.useForm();\r\n\r\n  const onFinish = (values: any) => {\r\n    // console.log(context.fileManagerOpenedFile);\r\n    setIsOpened(false);\r\n    Context.isNoticeAddWindowOpened = false;\r\n    createNotice(values);\r\n  };\r\n\r\n  const onReset = () => {\r\n    form.resetFields();\r\n  };\r\n\r\n  const getValueOfSelection = (): string => {\r\n    if (Editor === undefined || !isOpened) return \"\";\r\n    let selectedLinesText: string = \"\";\r\n\r\n    for (\r\n      let i = Context.noticePos.startLineNumber;\r\n      i < Context.noticePos.endLineNumber + 1;\r\n      i++\r\n    ) {\r\n      selectedLinesText += Editor.getModel()?.getLineContent(i);\r\n      if (i != Context.noticePos.endLineNumber) {\r\n        selectedLinesText += \"\\n\";\r\n      }\r\n    }\r\n\r\n    return selectedLinesText;\r\n  };\r\n\r\n  return (\r\n    <Drawer\r\n      title=\"Create notice\"\r\n      width={500}\r\n      placement=\"right\"\r\n      closable\r\n      destroyOnClose\r\n      onClose={() => {\r\n        Context.isNoticeAddWindowOpened = false;\r\n        setIsOpened(false);\r\n        Emitter.emit(\"close_notice_add\");\r\n      }}\r\n      visible={isOpened}\r\n      footer={\r\n        <div\r\n          style={{\r\n            textAlign: \"right\",\r\n          }}\r\n        >\r\n          <Button\r\n            onClick={() => {\r\n              Context.isNoticeAddWindowOpened = false;\r\n              setIsOpened(false);\r\n              Emitter.emit(\"close_notice_add\");\r\n            }}\r\n            style={{ marginRight: 8 }}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            htmlType=\"button\"\r\n            onClick={onReset}\r\n            style={{ marginRight: 8 }}\r\n          >\r\n            Reset\r\n          </Button>\r\n          <Button\r\n            onClick={() => {}}\r\n            htmlType=\"submit\"\r\n            form=\"notice_add\"\r\n            type=\"primary\"\r\n          >\r\n            Create\r\n          </Button>\r\n        </div>\r\n      }\r\n    >\r\n      <Form {...layout} form={form} name=\"notice_add\" onFinish={onFinish}>\r\n        <Form.Item\r\n          name=\"Question\"\r\n          label=\"Question\"\r\n          rules={[{ required: true }]}\r\n        >\r\n          <Input allowClear />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"Description\"\r\n          label=\"Description\"\r\n          rules={[{ required: true }]}\r\n        >\r\n          <TextArea allowClear showCount maxLength={300} rows={6} />\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Text strong style={{ fontSize: \"1.2em\" }}>\r\n            Lines selected:\r\n          </Text>\r\n        </Form.Item>\r\n        <Form.Item {...editorLayout} style={{ minHeight: 300 }}>\r\n          <NoticeEditor\r\n            value={getValueOfSelection()}\r\n            lineStart={Context.noticePos.startLineNumber}\r\n            lineCount={\r\n              Context.noticePos.endLineNumber -\r\n              Context.noticePos.startLineNumber\r\n            }\r\n          />\r\n        </Form.Item>\r\n      </Form>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default NoticeAddComponent;\r\n","import React, { useState, ReactNode, useEffect } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Space, Badge, Drawer, Button, Typography } from \"antd\";\r\nimport FileManager from \"../FileManager/FileManager\";\r\nimport Chat from \"../Chat/Chat\";\r\nimport NotificationPanel from \"../NotificationPanel/NotificationPanel\";\r\nimport ClosedNotificationPanel from \"../ClosedNotificationPanel/ClosedNotificationPanel\";\r\nimport {\r\n  FileOutlined,\r\n  WechatOutlined,\r\n  CameraOutlined,\r\n  SettingOutlined,\r\n  BellOutlined,\r\n  BookOutlined,\r\n} from \"@ant-design/icons\";\r\nimport Style from \"./ToolPanel.module.css\";\r\nimport { Editor, Monaco, scrollInfo } from \"../Editor/Editor\";\r\nimport EditorNotice from \"../EditorNotice/EditorNotice\";\r\nimport { Context, useAppContext } from \"../App/AppContext\";\r\nimport NoticeAddComponent from \"../NoticeAddComponent/NoticeAddComponent\";\r\nimport { Size } from \"../WorkSpace/WorkSpace\";\r\nimport MonacoRef from \"monaco-editor\";\r\nimport { Emitter, socketRef, VIEW_TYPE } from \"../App/App\";\r\nimport { TooltipPlacement } from \"antd/lib/tooltip\";\r\nimport axios from \"axios\";\r\nimport { openNotification } from \"../Notification/Notification\";\r\n\r\ninterface Props {\r\n  setToolPanelSize: (state: any) => any;\r\n}\r\n\r\nexport interface NoticeItem {\r\n  id: number;\r\n  title: string;\r\n  desc: string;\r\n  author: string;\r\n  position: MonacoRef.IRange;\r\n  currentFile: string;\r\n}\r\n\r\nexport interface Message {\r\n  content: string;\r\n  title: string;\r\n  date: string;\r\n}\r\n\r\nexport interface FileInfo {\r\n  name: string;\r\n  path: string;\r\n  isDirectory: boolean;\r\n  ext: string;\r\n  size: number;\r\n  content: string;\r\n  children: FileInfo[];\r\n}\r\n\r\ninterface Tool {\r\n  icon: ReactNode;\r\n  name: string;\r\n}\r\n\r\nconst { Text } = Typography;\r\nconst closedData: NoticeItem[] = [\r\n  {\r\n    id: 6,\r\n    title: \"Очень непонятно!\",\r\n    desc: \"Можешь ещё раз объяснить что тут. Я всё пропустил.\",\r\n    author: \"Kolya\",\r\n    position: {\r\n      startLineNumber: 4,\r\n      endLineNumber: 5,\r\n      startColumn: 4,\r\n      endColumn: 6,\r\n    },\r\n    currentFile:\r\n      \"C:\\\\Users\\\\ermuh\\\\Documents\\\\js_projects\\\\live_coding_server\\\\root\\\\scripts\\\\index.js\",\r\n  },\r\n  {\r\n    id: 7,\r\n    title: \"А что делает этот участок кода?\",\r\n    desc: \"Я понял, что возвращаемое значение не определено, но как не падает ошибка?\\nЭто здесь реализованно или как?\",\r\n    author: \"Olga\",\r\n    position: {\r\n      startLineNumber: 40,\r\n      endLineNumber: 40,\r\n      startColumn: 60,\r\n      endColumn: 60,\r\n    },\r\n    currentFile: \"/script/index.js\",\r\n  },\r\n  {\r\n    id: 8,\r\n    title: \"Аааа! Как это работает?\",\r\n    desc: \"Голова кипит! Пж, расскажи как это получется.\\nНичего не понимаю, помоги!\",\r\n    author: \"Dasha\",\r\n    position: {\r\n      startLineNumber: 55,\r\n      endLineNumber: 55,\r\n      startColumn: 12,\r\n      endColumn: 34,\r\n    },\r\n    currentFile: \"/script/index.js\",\r\n  },\r\n];\r\nconst data: NoticeItem[] = [\r\n  {\r\n    id: 1,\r\n    title: \"Что в этой строчке кода?\",\r\n    desc: \"Никак немогу разобраться. Объясни плиз!\",\r\n    author: \"Dima\",\r\n    position: {\r\n      startLineNumber: 7,\r\n      endLineNumber: 12,\r\n      startColumn: 10,\r\n      endColumn: 10,\r\n    },\r\n    currentFile: \"/script/index.js\",\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"А это работает везде так?\",\r\n    desc: \"А если заначения будут другими или контест поменяется?\\nВожможно ли падение ошибки?\",\r\n    author: \"Danya\",\r\n    position: {\r\n      startLineNumber: 1,\r\n      endLineNumber: 3,\r\n      startColumn: 12,\r\n      endColumn: 12,\r\n    },\r\n    currentFile: \"/script/index.js\",\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Хах, прикольно\",\r\n    desc: \"Очень интересно написано. Правда рефакторинг трудный будет.\",\r\n    author: \"Vova\",\r\n    position: {\r\n      startLineNumber: 23,\r\n      endLineNumber: 23,\r\n      startColumn: 23,\r\n      endColumn: 23,\r\n    },\r\n    currentFile: \"/script/index.js\",\r\n  },\r\n  {\r\n    id: 4,\r\n    title: \"Что-то странное\",\r\n    desc: \"Очень странное поведение тут. Возможно из-за пееременной... Или возможно, контекст не тот.\\nПопробуй проверь\",\r\n    author: \"Oleg\",\r\n    position: {\r\n      startLineNumber: 45,\r\n      endLineNumber: 45,\r\n      startColumn: 2,\r\n      endColumn: 2,\r\n    },\r\n    currentFile: \"/script/index.js\",\r\n  },\r\n];\r\n\r\nlet messages: Message[] = [];\r\nlet directory: FileInfo[] = [];\r\nlet openedToolVar: string = \"\";\r\nlet isOpenedToolVar: boolean = false;\r\nlet newMessages: number = 0;\r\nlet updateNum = 0;\r\n\r\nconst TOOL_PANEL_WIDTH: number = 250;\r\nconst noticePoint = document.createElement(\"div\");\r\n\r\nconst ToolPanel = ({ setToolPanelSize }: Props) => {\r\n  const { context, setContext } = useAppContext();\r\n\r\n  const [isOpened, setIsOpened] = useState<boolean>(false);\r\n  const [isNoticeOpened, setIsNoticeOpened] = useState<boolean>(false);\r\n  const [openedTool, setOpenedTool] = useState<string>(\"\");\r\n  const [noticeCount, setNoticeCount] = useState<number>(data.length);\r\n  const [messageCount, setMesssageCount] = useState<number>(newMessages);\r\n  const [messageArr, setMessageArr] = useState<Message[]>(messages);\r\n  const [closedNoticeArr, setClosedNoticeArr] =\r\n    useState<NoticeItem[]>(closedData);\r\n  const [noticeArr, setNoticeArr] = useState<NoticeItem[]>(data);\r\n  const [openedNoticeId, setOpenedNoticeId] = useState<number>(0);\r\n  const [size, setSize] = useState<Size>({ width: \"0px\", height: \"100%\" });\r\n  const [expandedKeys, setExpandedKeys] = useState<string[]>([]);\r\n  const [placement, setPlacement] = useState<TooltipPlacement>(\"topLeft\");\r\n  const [filesArr, setFilesArr] = useState<FileInfo[]>(directory);\r\n  const [update, setUpdate] = useState<number>(updateNum);\r\n\r\n  function forceUpdate() {\r\n    setUpdate(++updateNum);\r\n  }\r\n\r\n  let contentWidget;\r\n\r\n  useEffect(() => {\r\n    Emitter.on(\"close_notice_add\", () => {});\r\n\r\n    Emitter.on(\"notice_will_scroll\", (e) => {\r\n      const popover = document.getElementsByClassName(\"CoolMan\")[0];\r\n      const wOffset = noticePoint.offsetTop;\r\n      const sOffset = e.scrollTop;\r\n      const offset = wOffset - sOffset;\r\n\r\n      if (popover) {\r\n        const parent: HTMLElement | null = popover.closest(\".ant-popover \");\r\n\r\n        if (!parent) return;\r\n\r\n        if (parent?.classList.contains(\"ant-popover-placement-bottomLeft\")) {\r\n          parent.style.top = offset + 17 + \"px\";\r\n        } else {\r\n          parent.style.top = offset - parent.offsetHeight - 2 + \"px\";\r\n        }\r\n      }\r\n    });\r\n\r\n    axios\r\n      .get(\"http://localhost:4000/directory\")\r\n      .then((json) => {\r\n        json.data.sort((a: FileInfo, b: FileInfo) => {\r\n          if (a.isDirectory) return -1;\r\n          else if (b.isDirectory) return 0;\r\n          return 1;\r\n        });\r\n\r\n        directory = json.data;\r\n        setFilesArr(directory);\r\n      })\r\n      .catch((err) => {\r\n        openNotification({\r\n          message: <Text type=\"danger\">Files fetch error.</Text>,\r\n          description:\r\n            \"Unexpected error on server! Try to reload page.\\n\" + err,\r\n          type: \"error\",\r\n        });\r\n      });\r\n\r\n    axios\r\n      .get(\"http://localhost:4000/chat_messages\")\r\n      .then((json) => {\r\n        messages = json.data;\r\n        setMessageArr(messages);\r\n        setMesssageCount(messages.length);\r\n      })\r\n      .catch((err) => {\r\n        openNotification({\r\n          message: <Text type=\"danger\">Chat messages fetch error.</Text>,\r\n          description:\r\n            \"Unexpected error on server! Try to reload page.\\n\" + err,\r\n          type: \"error\",\r\n        });\r\n      });\r\n\r\n    Emitter.on(\"chat_message\", (data) => {\r\n      messages.push(data);\r\n\r\n      if (isOpenedToolVar) {\r\n        if (openedToolVar !== \"chat\") {\r\n          newMessages++;\r\n          setMesssageCount(newMessages);\r\n        }\r\n      } else {\r\n        newMessages++;\r\n        setMesssageCount(newMessages);\r\n      }\r\n\r\n      setMessageArr(messages);\r\n      forceUpdate();\r\n    });\r\n\r\n    Emitter.on(\"editor_data_broadcast\", (data) => {\r\n      directory.forEach((item) => {\r\n        if (item.path === data.file) {\r\n          item.content = data.value;\r\n\r\n          setFilesArr(directory);\r\n        }\r\n      });\r\n\r\n      if (Context.fileManagerOpenedFile.path === data.file) {\r\n        Context.fileManagerOpenedFile.content = data.value;\r\n        Emitter.emit(\"editor_update\", data);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const tools: Tool[] =\r\n    VIEW_TYPE === \"streamer\"\r\n      ? [\r\n          { icon: <FileOutlined />, name: \"file\" },\r\n          {\r\n            icon: (\r\n              <Badge\r\n                className={Style.Badge}\r\n                count={messageCount}\r\n                overflowCount={100}\r\n                size=\"small\"\r\n                offset={[-5, 0]}\r\n                title={\"Unread messages\"}\r\n              >\r\n                <WechatOutlined className={Style.ToolPanel_Icons} />\r\n              </Badge>\r\n            ),\r\n            name: \"chat\",\r\n          },\r\n          { icon: <CameraOutlined />, name: \"camera\" },\r\n          { icon: <SettingOutlined />, name: \"settings\" },\r\n          {\r\n            icon: (\r\n              <Badge\r\n                className={Style.Badge}\r\n                count={noticeCount}\r\n                overflowCount={9}\r\n                size=\"small\"\r\n                offset={[-5, 0]}\r\n                title={\"Unread messages\"}\r\n              >\r\n                <BellOutlined className={Style.ToolPanel_Icons} />\r\n              </Badge>\r\n            ),\r\n            name: \"notice\",\r\n          },\r\n          { icon: <BookOutlined />, name: \"closed_notice\" },\r\n        ]\r\n      : [\r\n          { icon: <FileOutlined />, name: \"file\" },\r\n          {\r\n            icon: (\r\n              <Badge\r\n                className={Style.Badge}\r\n                count={messageCount}\r\n                overflowCount={100}\r\n                size=\"small\"\r\n                offset={[-5, 0]}\r\n                title={\"Unread messages\"}\r\n              >\r\n                <WechatOutlined className={Style.ToolPanel_Icons} />\r\n              </Badge>\r\n            ),\r\n            name: \"chat\",\r\n          },\r\n          {\r\n            icon: (\r\n              <Badge\r\n                className={Style.Badge}\r\n                count={noticeCount}\r\n                overflowCount={9}\r\n                size=\"small\"\r\n                offset={[-5, 0]}\r\n                title={\"Unread messages\"}\r\n              >\r\n                <BellOutlined className={Style.ToolPanel_Icons} />\r\n              </Badge>\r\n            ),\r\n            name: \"notice\",\r\n          },\r\n          { icon: <BookOutlined />, name: \"closed_notice\" },\r\n        ];\r\n\r\n  Context.placement = \"topLeft\";\r\n\r\n  const openNotice = (id: number) => {\r\n    if (isNoticeOpened) {\r\n      setIsNoticeOpened(false);\r\n      Editor.deltaDecorations(Context.decorations, []);\r\n      Context.isSrcollEventActive = false;\r\n    }\r\n\r\n    const notice = getNoticeFromId(id);\r\n\r\n    if (Context.fileManagerOpenedFile.path !== notice.currentFile) {\r\n      Emitter.emit(\"notice_open_file\", { path: notice.currentFile });\r\n    }\r\n\r\n    Editor.revealLineInCenter(getNoticeFromId(id).position.startLineNumber, 0);\r\n\r\n    let scrollTop = Editor.getScrollTop();\r\n    let place: number;\r\n\r\n    if (notice.position.startLineNumber < 10) {\r\n      place = notice.position.endLineNumber;\r\n      Context.placement = \"bottomLeft\";\r\n    } else {\r\n      place = notice.position.startLineNumber;\r\n      Context.placement = \"topLeft\";\r\n    }\r\n\r\n    setPlacement(Context.placement);\r\n\r\n    contentWidget = {\r\n      getId: function () {\r\n        return \"my.content.widget\";\r\n      },\r\n      getDomNode: function () {\r\n        return noticePoint;\r\n      },\r\n      getPosition: function () {\r\n        return {\r\n          position: {\r\n            lineNumber: place,\r\n            column:\r\n              (notice.position.endColumn - notice.position.startColumn) / 2,\r\n          },\r\n          preference: [\r\n            Monaco.editor.ContentWidgetPositionPreference.ABOVE,\r\n            Monaco.editor.ContentWidgetPositionPreference.BELOW,\r\n          ],\r\n        };\r\n      },\r\n    };\r\n    Editor.addContentWidget(contentWidget);\r\n\r\n    Context.decorations = Editor.deltaDecorations(\r\n      [],\r\n      [\r\n        {\r\n          range: notice.position,\r\n          options: {\r\n            isWholeLine: true,\r\n            className: \"noticeLineSelected\",\r\n            marginClassName: \"noticeLineSelectedMargin\",\r\n            glyphMarginClassName: \"noticeLineSelectedGlyph\",\r\n            hoverMessage: { value: `${notice.title} from ${notice.author}` },\r\n          },\r\n        },\r\n      ]\r\n    );\r\n\r\n    setOpenedNoticeId(id);\r\n    setIsNoticeOpened(true);\r\n    Context.isSrcollEventActive = true;\r\n  };\r\n\r\n  const toolsToComponents = (tools: Tool[]): ReactNode[] => {\r\n    return tools.map((item) => (\r\n      <div\r\n        key={item.name}\r\n        className={Style.Icon}\r\n        onClick={(e) => onIconClick(e, item.name)}\r\n      >\r\n        {item.icon}\r\n      </div>\r\n    ));\r\n  };\r\n\r\n  const openToolPanel = (id: string) => {\r\n    setOpenedTool(id);\r\n    openedToolVar = id;\r\n    setIsOpened(true);\r\n    isOpenedToolVar = true;\r\n    setSize({ width: TOOL_PANEL_WIDTH + \"px\", height: \"100%\" });\r\n\r\n    if (openedToolVar === \"chat\") {\r\n      newMessages = 0;\r\n      setMesssageCount(newMessages);\r\n    }\r\n  };\r\n\r\n  const closeToolPanel = () => {\r\n    setSize({ width: \"0px\", height: \"100%\" });\r\n    setIsOpened(false);\r\n    isOpenedToolVar = false;\r\n  };\r\n\r\n  const onIconClick = (e: any, id: string) => {\r\n    if (isOpened) {\r\n      if (openedTool != id) {\r\n        openToolPanel(id);\r\n        openedToolVar = id;\r\n      } else closeToolPanel();\r\n    } else {\r\n      openToolPanel(id);\r\n      openedToolVar = id;\r\n    }\r\n  };\r\n\r\n  const createNotice = (values: any) => {\r\n    const author: string = \"Han Solo\";\r\n    const pos = Context.noticePos;\r\n    setNoticeArr([\r\n      {\r\n        id: noticeArr.length + closedNoticeArr.length + 1,\r\n        title: values.Question,\r\n        desc: values.Description,\r\n        author,\r\n        position: pos,\r\n        currentFile: Context.fileManagerOpenedFile.path,\r\n      },\r\n      ...noticeArr,\r\n    ]);\r\n    setNoticeCount(noticeArr.length + 1);\r\n  };\r\n\r\n  const getToolComponentByName = (name: string): ReactNode => {\r\n    switch (name) {\r\n      case \"file\":\r\n        return (\r\n          <FileManager\r\n            data={filesArr}\r\n            expanded={expandedKeys}\r\n            setExpanded={setExpandedKeys}\r\n          />\r\n        );\r\n      case \"chat\":\r\n        return (\r\n          <Chat\r\n            key={update}\r\n            sourceMessages={messages}\r\n            messages={messageArr}\r\n            setMessageArr={setMessageArr}\r\n            setMessageCount={setMesssageCount}\r\n          />\r\n        );\r\n      case \"notice\":\r\n        return (\r\n          <NotificationPanel\r\n            data={noticeArr}\r\n            setNoticeCount={setNoticeCount}\r\n            setClosedNoticeArr={setClosedNoticeArr}\r\n            setNoticeArr={setNoticeArr}\r\n            openNotice={openNotice}\r\n          />\r\n        );\r\n      case \"closed_notice\":\r\n        return (\r\n          <ClosedNotificationPanel\r\n            data={closedNoticeArr}\r\n            openNotice={openNotice}\r\n          />\r\n        );\r\n    }\r\n  };\r\n\r\n  const getNoticeFromId = (id: number): NoticeItem => {\r\n    return [...noticeArr, ...closedNoticeArr].filter(\r\n      (item) => item.id === id\r\n    )[0];\r\n  };\r\n\r\n  return (\r\n    <div className={Style.Wrapper}>\r\n      <Space\r\n        className={`${Style.ToolPanel_Icons} ${Style.ToolPanel_Space}`}\r\n        style={{ width: 50, minWidth: 50 }}\r\n        direction=\"vertical\"\r\n      >\r\n        {toolsToComponents(tools)}\r\n      </Space>\r\n      <div className={Style.ToolPanel_OpenedTool} style={{ ...size }}>\r\n        {getToolComponentByName(openedTool)}\r\n      </div>\r\n\r\n      {isNoticeOpened && (\r\n        <>\r\n          {ReactDOM.createPortal(\r\n            <div\r\n              style={{\r\n                position: \"absolute\",\r\n                top: 13,\r\n              }}\r\n            >\r\n              <EditorNotice\r\n                placement={placement}\r\n                data={getNoticeFromId(openedNoticeId)}\r\n                isOpened={isNoticeOpened}\r\n                setIsOpened={setIsNoticeOpened}\r\n                contentWidget={contentWidget}\r\n              ></EditorNotice>\r\n            </div>,\r\n            noticePoint\r\n          )}\r\n        </>\r\n      )}\r\n      <NoticeAddComponent createNotice={createNotice} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ToolPanel;\r\n","import React, { ReactNode, useEffect, useRef, useState } from \"react\";\r\nimport { Typography } from \"antd\";\r\nimport { Emitter } from \"../App/App\";\r\nimport * as Scroll from \"react-scroll\";\r\nimport Style from \"./OutputWindow.module.css\";\r\nimport {\r\n  ClearOutlined,\r\n  VerticalAlignBottomOutlined,\r\n  VerticalAlignTopOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nlet stateNum = 0;\r\nlet stateOutputNum = 0;\r\nlet consoleValueString: ReactNode[] = [];\r\nconst { Text } = Typography;\r\n\r\nconst OutputWindow = () => {\r\n  const [state, setState] = useState(0);\r\n  const [stateOutput, setStateOutput] = useState(0);\r\n  const [consoleValue, setConsoleValue] =\r\n    useState<ReactNode[]>(consoleValueString);\r\n  const [isLoading, setIsLoading] = useState<boolean>(true);\r\n  const [consoleOutputHeight, setConsoleOutputHeight] =\r\n    useState<string>(\"100%\");\r\n  const [consoleOutputOverflow, setConsoleOutputOverflow] =\r\n    useState<string>(\"overlay\");\r\n  const [iframeHeight, setIframeHeight] = useState<string>(\"80%\");\r\n  const [isCollaped, setIsCollaped] = useState<boolean>(false);\r\n  const ref = React.createRef<HTMLIFrameElement>();\r\n\r\n  useEffect(() => {\r\n    function handler() {\r\n      setState(++stateNum);\r\n    }\r\n    function handlerOutput() {\r\n      setStateOutput(++stateOutputNum);\r\n    }\r\n\r\n    Emitter.on(\"output_reload\", handler);\r\n\r\n    window.addEventListener(\"message\", function (response) {\r\n      if (response.data && response.data.source === \"iframe\") {\r\n        let el;\r\n        if (response.data.message[0] === \"error\") {\r\n          const parsed = response.data.message[1].url.split(\"/\");\r\n          el = (\r\n            <div className={Style.ConsoleItem} key={consoleValueString.length}>\r\n              <Text type={\"danger\"} code>\r\n                {response.data.message[1].error.stack}\r\n              </Text>\r\n              <Text type={\"secondary\"} underline strong className={Style.fileAndLine}>\r\n                {parsed[parsed.length - 1] +\r\n                  \":\" +\r\n                  response.data.message[1].lineNo}\r\n              </Text>\r\n            </div>\r\n          );\r\n        } else {\r\n          el = (\r\n            <div className={Style.ConsoleItem} key={consoleValueString.length}>\r\n              <Text type={\"secondary\"} code>\r\n                {response.data.message\r\n                  .slice(2)\r\n                  .map((item: any) => JSON.stringify(item))\r\n                  .join(\" \")}\r\n              </Text>\r\n              <Text type={\"secondary\"} underline strong className={Style.fileAndLine}>\r\n                {response.data.message[1]}\r\n              </Text>\r\n            </div>\r\n          );\r\n        }\r\n        consoleValueString.push(el);\r\n        setConsoleValue(consoleValueString);\r\n        handlerOutput();\r\n\r\n        Scroll.scroller.scrollTo(\"scrollPoint\", {\r\n          duration: 500,\r\n          delay: 0,\r\n          smooth: true,\r\n          containerId: \"scroll\",\r\n        });\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      Emitter.off(\"output_reload\", handler);\r\n    };\r\n  }, []);\r\n\r\n  const clearConsole = () => {\r\n    consoleValueString = [];\r\n    setConsoleValue(consoleValueString);\r\n  };\r\n  const collapseConsole = () => {\r\n    if (isCollaped) {\r\n      setConsoleOutputHeight(\"100%\");\r\n      setIframeHeight(\"80%\");\r\n      setConsoleOutputOverflow(\"overlay\");\r\n      setIsCollaped(false);\r\n    } else {\r\n      setConsoleOutputHeight(\"0%\");\r\n      setConsoleOutputOverflow(\"hidden\");\r\n      setIframeHeight(\"95%\");\r\n      setIsCollaped(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ width: \"100%\", height: \"100%\", backgroundColor: \"#fff\" }}>\r\n      <iframe\r\n        ref={ref}\r\n        src=\"http://localhost:4000/\"\r\n        frameBorder=\"0\"\r\n        style={{ width: \"100%\", height: iframeHeight, overflow: \"overlay\" }}\r\n        key={state}\r\n        id={\"iframe\"}\r\n      ></iframe>\r\n\r\n      <div\r\n        className={Style.Console}\r\n        style={{\r\n          height: \"20%\",\r\n        }}\r\n      >\r\n        <div className={Style.ConsoleMenu}>\r\n          <Text\r\n            type=\"secondary\"\r\n            style={{ color: \"rgba(190, 190, 190, 0.623)\", margin: \"0px 5px\" }}\r\n          >\r\n            Console\r\n          </Text>\r\n\r\n          <div className={Style.ConsoleMenuButtons}>\r\n            <ClearOutlined className={Style.Button} onClick={clearConsole} />\r\n            {isCollaped ? (\r\n              <VerticalAlignTopOutlined\r\n                className={Style.Button}\r\n                onClick={collapseConsole}\r\n              />\r\n            ) : (\r\n              <VerticalAlignBottomOutlined\r\n                className={Style.Button}\r\n                onClick={collapseConsole}\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div\r\n          key={stateOutput}\r\n          className={Style.ConsoleOutput}\r\n          id=\"scroll\"\r\n          style={{\r\n            height: consoleOutputHeight,\r\n            overflow: consoleOutputOverflow,\r\n          }}\r\n        >\r\n          {/* <div style={{ height: \"max-content\" }}>{consoleValue}</div> */}\r\n          {consoleValue}\r\n          {<Scroll.Element name=\"scrollPoint\" />}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OutputWindow;\r\n","import { useState } from \"react\";\r\nimport WorkSpaceItem from \"../WorkSpaceItem/WorkSpaceItem\";\r\nimport EditorComponent from \"../Editor/Editor\";\r\nimport ToolPanel from \"../ToolPanel/ToolPanel\";\r\nimport OutputWindow from \"../OutputWindow/OutputWindow\";\r\nimport Style from \"./WorkSpace.module.css\";\r\n\r\nexport interface Size {\r\n  width: string;\r\n  height: string;\r\n}\r\n\r\nconst WorkSpace = () => {\r\n  const [toolPanelSize, setToolPanelSize] = useState<Size>({\r\n    width: \"max-content\",\r\n    height: \"100%\",\r\n  });\r\n  const [editorSize, setEditorSize] = useState<Size>({\r\n    width: \"50%\",\r\n    height: \"100%\",\r\n  });\r\n  const [outputSize, setOutputSize] = useState<Size>({\r\n    width: \"50%\",\r\n    height: \"100%\",\r\n  });\r\n\r\n  return (\r\n    <div className={Style.WorkSpace}>\r\n      <WorkSpaceItem\r\n        size={toolPanelSize}\r\n        setSize={setToolPanelSize}\r\n        nextSize={editorSize}\r\n        setNextSize={setEditorSize}\r\n      >\r\n        <ToolPanel setToolPanelSize={setToolPanelSize} />\r\n      </WorkSpaceItem>\r\n      <WorkSpaceItem\r\n        size={editorSize}\r\n        setSize={setEditorSize}\r\n        nextSize={outputSize}\r\n        setNextSize={setOutputSize}\r\n      >\r\n        <EditorComponent />\r\n      </WorkSpaceItem>\r\n      <WorkSpaceItem\r\n        size={outputSize}\r\n        setSize={setToolPanelSize}\r\n        nextSize={editorSize}\r\n        setNextSize={setEditorSize}\r\n      >\r\n        <OutputWindow />\r\n      </WorkSpaceItem>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WorkSpace;\r\n","import React from \"react\";\r\nimport { Layout } from \"antd\";\r\nimport WorkSpace from \"../WorkSpace/WorkSpace\";\r\nconst { Content } = Layout;\r\n\r\nconst LayoutComponent = () => {\r\n  return (\r\n    <Layout style={{height: \"100%\"}}>\r\n      <Content>\r\n        <WorkSpace />\r\n      </Content>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default LayoutComponent;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport LayoutComponent from \"../LayoutComponent/LayoutComponent\";\r\nimport \"./App.css\";\r\nimport \"antd/dist/antd.css\";\r\nimport AppContext, { AppContextType, Context } from \"./AppContext\";\r\nimport EventEmitter from \"events\";\r\nimport { io, Socket } from \"socket.io-client\";\r\nimport { DefaultEventsMap } from \"socket.io-client/build/typed-events\";\r\nimport { openNotification } from \"../Notification/Notification\";\r\nimport { Typography } from \"antd\";\r\n\r\nconst { Text } = Typography;\r\n\r\n\r\nexport type ViewType = \"streamer\" | \"viewer\";\r\n\r\n// export const VIEW_TYPE: ViewType =\r\n//   (localStorage.getItem(\"view_type\") as ViewType) || \"streamer\";\r\nexport const VIEW_TYPE: ViewType = window.confirm(\"You are a streamer?\")\r\n? \"streamer\"\r\n: \"viewer\";\r\n\r\nContext.username = VIEW_TYPE;\r\n\r\nexport const Emitter = new EventEmitter();\r\n\r\n\r\n\r\nexport let socketRef: React.MutableRefObject<\r\n  Socket<DefaultEventsMap, DefaultEventsMap> | undefined\r\n>;\r\n\r\nfunction App() {\r\n  const [contextState, setContextState] = useState<AppContextType>(Context);\r\n  socketRef = useRef<Socket<DefaultEventsMap, DefaultEventsMap>>();\r\n\r\n  useEffect(() => {\r\n    socketRef.current = io(\"http://localhost:4000\", {\r\n      reconnection: false,\r\n      transports: [\"websocket\"],\r\n      query: {\r\n        roomId: \"testing\",\r\n      },\r\n    });\r\n\r\n    socketRef.current.on(\"connect\", () => {\r\n      console.log(\"connected\");\r\n    });\r\n    socketRef.current.on(\"disconnect\", (reason) => {\r\n      console.log(\"disconnected by \", reason);\r\n    });\r\n    socketRef.current.on(\"connect_error\", (err) => {\r\n      openNotification({\r\n        message: <Text type=\"danger\">{\"Socket connection error\\n\"}</Text>,\r\n        description: err.message,\r\n        type: \"error\",\r\n      });\r\n    });\r\n\r\n    socketRef.current?.on(\"chat_message\", (data) => {\r\n      Emitter.emit(\"chat_message\", data);\r\n    });\r\n\r\n    if (VIEW_TYPE === \"viewer\") {\r\n      socketRef.current?.on(\"editor_data_broadcast\", (data) => {\r\n        Emitter.emit(\"editor_data_broadcast\", data);\r\n      });\r\n    } else {\r\n      \r\n    }\r\n\r\n    Emitter.on(\"new_chat_message\", (data) => {\r\n      socketRef.current?.emit(\"new_chat_message\", data);\r\n    });\r\n\r\n    return () => {\r\n      socketRef.current?.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <AppContext.Provider\r\n        value={{ context: contextState, setContext: setContextState }}\r\n      >\r\n        <LayoutComponent />\r\n      </AppContext.Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./components/App/App\";\r\nimport dotenv from \"dotenv\";\r\n\r\ndotenv.config();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ToolPanel_Icons\":\"ToolPanel_ToolPanel_Icons__3vMI8\",\"ToolPanel_Space\":\"ToolPanel_ToolPanel_Space__21Vbq\",\"Wrapper\":\"ToolPanel_Wrapper__2VDXt\",\"ToolPanel_OpenedTool\":\"ToolPanel_ToolPanel_OpenedTool__3B8ZD\",\"Icon\":\"ToolPanel_Icon__3WgFO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ConsoleItem\":\"OutputWindow_ConsoleItem__2vfJN\",\"Console\":\"OutputWindow_Console__g3APw\",\"ConsoleOutput\":\"OutputWindow_ConsoleOutput__2w6el\",\"ConsoleMenu\":\"OutputWindow_ConsoleMenu__2hM3U\",\"ConsoleMenuButtons\":\"OutputWindow_ConsoleMenuButtons__2GWdI\",\"Button\":\"OutputWindow_Button__11b6a\",\"FileAndLine\":\"OutputWindow_FileAndLine__Pf3As\"};"],"sourceRoot":""}