{"version":3,"sources":["components/Chat/Chat.module.css","components/FileManager/FileManager.module.css","components/ChatMessage/ChatMessage.module.css","components/NotificationPanel/NotificationPanel.module.css","components/ClosedNotice/ClosedNotice.module.css","components/ClosedNotificationPanel/ClosedNotificationPanel.module.css","components/WorkSpaceItem/WorkSapceItem.module.css","components/ContextMenu/ContextMenu.module.css","components/WorkSpace/WorkSpace.module.css","components/App/App.module.css","components/WorkSpaceItem/WorkSpaceItem.tsx","components/App/AppContext.tsx","components/ContextMenu/ContextMenu.tsx","components/FileManager/FileManager.tsx","components/Editor/Editor.tsx","components/App/App.tsx","components/Notification/Notification.tsx","components/Cam/Cam.tsx","components/Settings/Settings.tsx","components/ChatMessage/ChatMessage.tsx","components/Chat/Chat.tsx","components/Notice/Notice.tsx","components/NotificationPanel/NotificationPanel.tsx","components/ClosedNotice/ClosedNotice.tsx","components/ClosedNotificationPanel/ClosedNotificationPanel.tsx","components/EditorNotice/EditorNotice.tsx","components/NoticeEditor/NoticeEditor.tsx","components/NoticeAddComponent/NoticeAddComponent.tsx","components/ToolPanel/ToolPanel.tsx","components/OutputWindow/OutputWindow.tsx","components/WorkSpace/WorkSpace.tsx","components/LayoutComponent/LayoutComponent.tsx","index.tsx","components/ToolPanel/ToolPanel.module.css","components/OutputWindow/OutputWindow.module.css"],"names":["module","exports","ITEM","React","createRef","WorkSpaceItem","children","size","width","height","useEffect","current","offsetWidth","ref","className","Style","style","Context","isNoticeAddWindowOpened","noticePos","startColumn","startLineNumber","endColumn","endLineNumber","lineRange","from","to","scrollInfo","left","top","clientWidth","clientHeight","isSrcollEventActive","fileManagerOpenedFile","content","decorations","placement","username","url","window","location","pathname","split","ContextState","context","setContext","AppContext","createContext","useAppContext","useContext","Text","Typography","ContextMenu","title","trigger","visible","data","action","fileItem","onVisibleChange","defaultVisible","dataSource","renderItem","item","Item","List_item","last","border","onClick","e","disabled","id","el","DirectoryTree","Tree","TreeDataItem","props","key","isLeaf","icon","this","isStreamer","openFile","cutFile","copyFile","renameFile","deleteFile","VIEW_TYPE","console","log","Monaco","Editor","socketRef","FileManager","setExpanded","expanded","useState","setOpened","Emitter","on","openFileByPath","path","fileInfo","getFileInfoByPath","emit","flatData","flatDataArray","flatted","forEach","isDirectory","concat","push","getIconFromExtAndType","ext","FolderOpenOutlined","FolderOutlined","FileOutlined","filter","AppStyle","Dark","switcherIcon","DownOutlined","showIcon","blockNode","defaultExpandedKeys","treeData","getTreeDataFromData","name","onSelect","keys","info","node","toString","onExpand","stringKeys","map","onRightClick","defaultSelectedKeys","openNotification","message","description","type","notification","EditorComponent","value","setValue","EditorRef","useRef","MonacoRef","setEditorData","file","model","getModel","editor","setModelLanguage","getModeFromExt","getFileContent","defaultLanguage","defaultValue","theme","onChange","ev","onMount","monaco","addAction","label","contextMenuGroupId","contextMenuOrder","run","sel","getSelection","keybindings","KeyMod","CtrlCmd","KeyCode","KEY_S","axios","post","HOST","filePath","getValue","then","catch","err","updateOptions","roundedSelection","scrollBeyondLastLine","smoothScrolling","readOnly","defineTheme","base","inherit","rules","colors","setTheme","onDidScrollChange","Option","Select","Cam","isLoading","setIsLoading","direction","align","paddingTop","backgroundColor","borderRadius","display","justifyContent","alignItems","LoadingOutlined","fontSize","CameraOutlined","setTimeout","error","Math","random","SyncOutlined","spin","Paragraph","host","Settings","projectName","setProjectName","projectType","setProjectType","link","setLink","isWhiteList","setIsWhiteList","viewersArr","setViewersArr","whiteListArr","setWhiteListArr","isProjectNameLoading","setIsProjectNameLoading","isProjectTypeLoading","setIsProjectTypeLoading","isProjectLinkLoading","setIsProjectLinkLoading","isProjectViewersLoading","setIsProjectViewersLoading","setIsChangeMuteLoading","isWhiteListLoading","setIsWhiteListLoading","isAddButtonLoading","setIsAddButtonLoading","isAddModal","setIsAddModal","isAddLoading","userIdValue","setUserIdValue","fetchViewers","get","response","finally","fetchWhiteList","onBackModalClick","form","resetFields","Form","useForm","overflow","onCancel","footer","htmlType","onFinish","required","target","allowClear","marginRight","editable","code","padding","color","marginTop","cursor","strong","copyable","text","count","length","offset","borderColor","loading","user","muted","changeMute","danger","AudioMutedOutlined","marginLeft","AudioOutlined","bordered","maxHeight","defaultChecked","item_in","_id","CloseOutlined","marginBottom","ChatMessage","date","author","avatar","UserOutlined","datetime","ChatMessage_Date","Search","Input","Chat","messages","setMessageArr","sourceMessages","setMessageCount","inputText","setInputText","Scroll","scrollTo","duration","delay","smooth","containerId","Messages","DarkSecond","index","messageToReactNode","maxLength","enterButton","InputButton","onSearch","Date","toLocaleString","Meta","Card","Notice","closeNotice","openNotice","onCodeClick","actions","CodeOutlined","CloseCircleOutlined","desc","NotificationPanel","setNoticeCount","setClosedNoticeArr","setNoticeArr","sourceNotices","sourceClosedNotices","setSourceNotices","notice","newSourceNotices","unshift","reverse","Notice_Wrapper","ClosedNotice","isExpand","setIsExpand","toggleMeta","ellipsis","ClosedNotice_Text","extra","ClosedNotificationPanel","EditorNotice","isOpened","setIsOpened","contentWidget","destroyTooltipOnHide","maxWidth","deltaDecorations","removeContentWidget","NoticeEditor","lineStart","lineCount","minimap","enabled","lineNumbers","num","bottom","EDITOR_PADDING","TextArea","layout","labelCol","span","wrapperCol","editorLayout","NoticeAddComponent","createNotice","closable","destroyOnClose","onClose","textAlign","values","showCount","rows","minHeight","undefined","selectedLinesText","i","getLineContent","getValueOfSelection","closedNotices","notices","directory","openedToolVar","isOpenedToolVar","newMessages","updateNum","noticePoint","document","createElement","ToolPanel","setToolPanelSize","isNoticeOpened","setIsNoticeOpened","openedTool","setOpenedTool","noticeCount","messageCount","setMesssageCount","messageArr","closedNoticeArr","noticeArr","openedNoticeId","setOpenedNoticeId","setSize","expandedKeys","setExpandedKeys","setPlacement","filesArr","setFilesArr","update","setUpdate","noticesArr","popover","getElementsByClassName","offsetTop","scrollTop","parent","closest","classList","contains","offsetHeight","json","sort","a","b","tools","Badge","HoverText","overflowCount","WechatOutlined","ToolPanel_Icons","SettingOutlined","BellOutlined","BookOutlined","getNoticeFromId","currentFile","revealLineInCenter","position","place","getScrollTop","getId","getDomNode","getPosition","lineNumber","column","preference","ContentWidgetPositionPreference","ABOVE","BELOW","addContentWidget","range","options","isWholeLine","marginClassName","glyphMarginClassName","hoverMessage","openToolPanel","TOOL_PANEL_WIDTH","onIconClick","Wrapper","ToolPanel_Space","minWidth","Icon","toolsToComponents","c","enable","right","topRight","bottomRight","bottomLeft","topLeft","defaultSize","transition","onResizeStop","d","parseInt","getToolComponentByName","ReactDOM","createPortal","pos","Question","Description","stateNum","stateOutputNum","consoleValueString","OutputWindow","state","setState","stateOutput","setStateOutput","consoleValue","setConsoleValue","consoleOutputHeight","setConsoleOutputHeight","consoleOutputOverflow","setConsoleOutputOverflow","iframeHeight","setIframeHeight","isCollaped","setIsCollaped","handler","addEventListener","source","parsed","ConsoleItem","stack","underline","fileAndLine","lineNo","slice","JSON","stringify","join","off","collapseConsole","Iframe","src","frameBorder","Console","ConsoleMenu","margin","ConsoleMenuButtons","ClearOutlined","Button","VerticalAlignTopOutlined","VerticalAlignBottomOutlined","ConsoleOutput","WorkSpace","toolPanelSize","editorSize","setEditorSize","outputSize","setOutputSize","flexGrow","Content","Layout","LayoutComponent","EventEmitter","App","isModal","setIsModal","isNameLoading","inputName","setInputName","contextState","setContextState","afterNameEdit","viewtype","disconnect","vtype","io","reconnection","transports","query","roomId","reason","warn","useBeforeunload","afterClose","centered","replace","Provider","dotenv","config","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.38d624b5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Chat\":\"Chat_Chat__bFHYn\",\"Messages\":\"Chat_Messages__1pTSF\",\"Input\":\"Chat_Input__1ctf5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FileManager\":\"FileManager_FileManager__1dVwd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ChatMessage\":\"ChatMessage_ChatMessage__k57rQ\",\"ChatMessage_Date\":\"ChatMessage_ChatMessage_Date__2w_f9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Notice\":\"NotificationPanel_Notice__25aD5\",\"Notice_Wrapper\":\"NotificationPanel_Notice_Wrapper__hy2nl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ClosedNotice_Text\":\"ClosedNotice_ClosedNotice_Text__3b3JK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Notice\":\"ClosedNotificationPanel_Notice__17fAd\",\"Notice_Wrapper\":\"ClosedNotificationPanel_Notice_Wrapper__2UMAr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"WorkSpaceItem\":\"WorkSapceItem_WorkSpaceItem__3kt83\",\"WorkSpaceItem_Resizer\":\"WorkSapceItem_WorkSpaceItem_Resizer__2hhhU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"List_item\":\"ContextMenu_List_item__1KZa1\",\"ContextMenuPoint\":\"ContextMenu_ContextMenuPoint__3ywRb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"WorkSpace\":\"WorkSpace_WorkSpace__1F33P\",\"WorkSpace__wrapper_vertical\":\"WorkSpace_WorkSpace__wrapper_vertical__1JJDr\",\"Resizable\":\"WorkSpace_Resizable__39BF4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Dark\":\"App_Dark__1ha7r\",\"DarkSecond\":\"App_DarkSecond__1Mr9f\",\"HoverText\":\"App_HoverText__1rEzK\"};","import React, { DOMElement, FC, ReactNode, useState, useEffect } from \"react\";\r\nimport Style from \"./WorkSapceItem.module.css\";\r\nimport Dragable, { DraggableEvent } from \"react-draggable\";\r\nimport { Size } from \"../WorkSpace/WorkSpace\";\r\n\r\ninterface Props {\r\n  children?: ReactNode;\r\n  size?: Size;\r\n}\r\n\r\nlet width: number;\r\nconst ITEM = React.createRef<HTMLDivElement>();\r\n\r\nconst WorkSpaceItem: FC<Props> = ({\r\n  children,\r\n  size = { width: \"100%\", height: \"100%\" },\r\n}: Props) => {\r\n  useEffect(() => {\r\n    width = ITEM.current?.offsetWidth || 0;\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      ref={ITEM}\r\n      className={Style.WorkSpaceItem}\r\n      style={{ ...size }}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WorkSpaceItem;\r\n","import { TooltipPlacement } from \"antd/lib/tooltip\";\r\nimport { Position } from \"codemirror\";\r\nimport { createContext, useContext, useState } from \"react\";\r\nimport { FileInfo } from \"../ToolPanel/ToolPanel\";\r\n\r\nexport const Context = {\r\n  isNoticeAddWindowOpened: false,\r\n  noticePos: {\r\n    startColumn: 0,\r\n    startLineNumber: 0,\r\n    endColumn: 0,\r\n    endLineNumber: 0,\r\n  },\r\n  lineRange: {\r\n    from: 0,\r\n    to: 0,\r\n  },\r\n  scrollInfo: {\r\n    left: 0,\r\n    top: 0,\r\n    width: 0,\r\n    height: 0,\r\n    clientWidth: 0,\r\n    clientHeight: 0,\r\n  },\r\n  isSrcollEventActive: false,\r\n  fileManagerOpenedFile: { content: \"\" } as FileInfo,\r\n  decorations: [] as string[],\r\n  placement: \"topLeft\" as TooltipPlacement,\r\n  username: \"\",\r\n  url: window.location.pathname.split(\"/\")[1],\r\n  // url: \"86dd7a27421\",\r\n};\r\n\r\nexport type AppContextType = typeof Context;\r\n\r\nexport type ContextStateType = {\r\n  context: AppContextType;\r\n  setContext: React.Dispatch<React.SetStateAction<AppContextType>>;\r\n};\r\n\r\nexport const ContextState: ContextStateType = {\r\n  context: Context,\r\n  setContext: () => {},\r\n};\r\nconst AppContext = createContext<ContextStateType>(ContextState);\r\n\r\nexport const useAppContext = (): ContextStateType =>\r\n  useContext<ContextStateType>(AppContext);\r\n\r\nexport default AppContext;\r\n","import React, { ReactNode, FC } from \"react\";\r\nimport { Popover, List } from \"antd\";\r\nimport { TooltipPlacement } from \"antd/lib/tooltip\";\r\nimport Style from \"./ContextMenu.module.css\";\r\nimport { Typography } from \"antd\";\r\n\r\nconst { Text } = Typography;\r\n\r\ninterface Props {\r\n  data: any[];\r\n  action: any[];\r\n  children?: ReactNode | string;\r\n  title?: string;\r\n  placement?: TooltipPlacement;\r\n  trigger?: string;\r\n  visible?: boolean;\r\n  fileItem: any;\r\n  onVisibleChange?: (visible: boolean) => void;\r\n}\r\n\r\nconst ContextMenu: FC<Props> = ({\r\n  children,\r\n  title = \"Context menu\",\r\n  placement = \"rightBottom\",\r\n  trigger = \"contextMenu\",\r\n  visible = false,\r\n  data,\r\n  action,\r\n  fileItem,\r\n  onVisibleChange,\r\n}: Props) => {\r\n  return (\r\n      <Popover\r\n        placement={placement}\r\n        defaultVisible={visible}\r\n        onVisibleChange={onVisibleChange}\r\n        content={\r\n          <List\r\n            size=\"small\"\r\n            dataSource={data}\r\n            renderItem={(item: any) => {\r\n              return (\r\n                <List.Item\r\n                  className={Style.List_item}\r\n                  style={!item.last ? { border: \"none\" } : {}}\r\n                >\r\n                  <div\r\n                    key={item.id}\r\n                    onClick={(e) => {\r\n                      if (!item.disabled) action[item.id](e, fileItem);\r\n                    }}\r\n                  >\r\n                    {<Text disabled={item.disabled}>{item.el}</Text>}\r\n                  </div>\r\n                </List.Item>\r\n              );\r\n            }}\r\n          />\r\n        }\r\n        title={title}\r\n        trigger={trigger}\r\n      >\r\n        {children}\r\n      </Popover>\r\n  );\r\n};\r\n\r\nexport default ContextMenu;\r\n","import React, { ReactNode, useEffect, useState } from \"react\";\r\nimport { Tree } from \"antd\";\r\nimport ContextMenu from \"../ContextMenu/ContextMenu\";\r\nimport Style from \"./FileManager.module.css\";\r\nimport AppStyle from \"../App/App.module.css\";\r\nimport { FileInfo } from \"../ToolPanel/ToolPanel\";\r\nimport { Context, useAppContext } from \"../App/AppContext\";\r\nimport {\r\n  DownOutlined,\r\n  FileOutlined,\r\n  FolderOpenOutlined,\r\n  FolderOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { DiHtml5, DiCss3, DiJavascript1 } from \"react-icons/di\";\r\nimport { GrDocumentTxt } from \"react-icons/gr\";\r\nimport { AntTreeNode } from \"antd/lib/tree\";\r\nimport { Emitter, VIEW_TYPE } from \"../App/App\";\r\nconst { DirectoryTree } = Tree;\r\n\r\ninterface Props {\r\n  data: FileInfo[];\r\n  expanded: string[];\r\n  setExpanded: (keys: string[]) => void;\r\n}\r\ninterface TreeData {\r\n  title: string | ReactNode;\r\n  key: string;\r\n  isLeaf?: boolean;\r\n  children?: TreeData[];\r\n  icon?: ReactNode;\r\n}\r\nclass TreeDataItem implements TreeData {\r\n  title: string | ReactNode;\r\n  key: string;\r\n  isLeaf?: boolean;\r\n  children?: TreeData[];\r\n  icon: ReactNode;\r\n\r\n  constructor(props: TreeData) {\r\n    this.key = props.key;\r\n    this.isLeaf = props.isLeaf;\r\n    this.children = props.children;\r\n    this.icon = props.icon;\r\n    this.title = (\r\n      <ContextMenu\r\n        data={[\r\n          { el: \"Open\", disabled: false, last: true, id: 0 },\r\n          { el: \"Cut\", disabled: !isStreamer(), last: false, id: 1 },\r\n          { el: \"Copy\", disabled: !isStreamer(), last: true, id: 2 },\r\n          { el: \"Rename\", disabled: !isStreamer(), last: false, id: 3 },\r\n          { el: \"Delete\", disabled: !isStreamer(), last: true, id: 4 },\r\n        ]}\r\n        action={[openFile, cutFile, copyFile, renameFile, deleteFile]}\r\n        fileItem={this}\r\n      >\r\n        {props.title}\r\n      </ContextMenu>\r\n    );\r\n  }\r\n}\r\n\r\nfunction isStreamer(): boolean {\r\n  return VIEW_TYPE === \"streamer\";\r\n}\r\n\r\nfunction openFile(e: any, fileItem: TreeData) {\r\n  console.log(fileItem);\r\n}\r\nfunction cutFile(e: any) {}\r\nfunction copyFile(e: any) {}\r\nfunction renameFile(e: any) {}\r\nfunction deleteFile(e: any) {}\r\n\r\nconst FileManager = ({ data, setExpanded, expanded }: Props) => {\r\n  const [openedFile, setOpened] = useState<FileInfo>(\r\n    Context.fileManagerOpenedFile\r\n  );\r\n\r\n  useEffect(() => {\r\n    Emitter.on(\"notice_open_file\", (e) => {\r\n      openFileByPath(e.path); \r\n    });\r\n  }, []);\r\n\r\n  const openFileByPath = (path: string) => {\r\n    let fileInfo: FileInfo = getFileInfoByPath(path);\r\n\r\n    if (fileInfo) {\r\n      Context.fileManagerOpenedFile = fileInfo;\r\n      Emitter.emit(\"open_file\", fileInfo);\r\n      setOpened(fileInfo);\r\n    }\r\n  };\r\n\r\n  const flatDataArray = (data: FileInfo[]): FileInfo[] => {\r\n    let flatted: FileInfo[] = [];\r\n\r\n    data.forEach((item) => {\r\n      if (item.isDirectory) {\r\n        flatted = flatted.concat(flatDataArray(item.children));\r\n      } else {\r\n        flatted.push(item);\r\n      }\r\n    });\r\n\r\n    return flatted;\r\n  };\r\n\r\n  const flatData = flatDataArray(data);\r\n\r\n  const onSelect = (keys: React.Key[], info: any) => {\r\n    if (info.node.isLeaf) {\r\n      openFileByPath(keys[0].toString());\r\n    }\r\n  };\r\n\r\n  const onExpand = (keys: React.Key[]) => {\r\n    let stringKeys: string[] = keys.map((item) => item.toString());\r\n    setExpanded(stringKeys);\r\n  };\r\n\r\n  const getIconFromExtAndType = (\r\n    ext: string,\r\n    isDirectory: boolean\r\n  ): ReactNode | ((item: any) => ReactNode) => {\r\n    if (isDirectory) {\r\n      return (item) => {\r\n        if (item.expanded) return <FolderOpenOutlined />;\r\n        return <FolderOutlined />;\r\n      };\r\n    }\r\n    switch (ext) {\r\n      case \".html\":\r\n        return <DiHtml5 />;\r\n      case \".css\":\r\n        return <DiCss3 />;\r\n      case \".js\":\r\n        return <DiJavascript1 />;\r\n      case \".txt\":\r\n        return <GrDocumentTxt />;\r\n      default:\r\n        return <FileOutlined />;\r\n    }\r\n  };\r\n\r\n  const getTreeDataFromData = (data: FileInfo[]): TreeData[] => {\r\n    let treeData: TreeData[] = [];\r\n\r\n    data.forEach((item) => {\r\n      let ext = item.ext || \"\";\r\n      let data: TreeData = new TreeDataItem({\r\n        title: item.name + ext,\r\n        key: item.path,\r\n        isLeaf: !item.isDirectory,\r\n        icon: getIconFromExtAndType(ext, item.isDirectory),\r\n      });\r\n      if (item.isDirectory) {\r\n        data.children = getTreeDataFromData(item.children);\r\n      }\r\n      treeData.push(data);\r\n    });\r\n\r\n    return treeData;\r\n  };\r\n\r\n  const getFileInfoByPath = (path: string): FileInfo => {\r\n    return flatData.filter((item) => item.path === path)[0];\r\n  };\r\n\r\n  const onRightClick = (e: any) => {};\r\n\r\n  return (\r\n    <div className={`${Style.FileManager} ${AppStyle.Dark}`}>\r\n      <DirectoryTree\r\n        className={Style.Tree}\r\n        // showLine\r\n        switcherIcon={<DownOutlined />}\r\n        showIcon={true}\r\n        blockNode\r\n        defaultExpandedKeys={expanded}\r\n        treeData={getTreeDataFromData(data)}\r\n        onSelect={onSelect}\r\n        onExpand={onExpand}\r\n        onRightClick={onRightClick}\r\n        defaultSelectedKeys={[Context.fileManagerOpenedFile.path]}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileManager;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport MonacoEditor, { OnMount } from \"@monaco-editor/react\";\r\nimport { Context, useAppContext } from \"../App/AppContext\";\r\nimport {} from \"../FileManager/FileManager\";\r\nimport { Emitter, HOST, socketRef, VIEW_TYPE } from \"../App/App\";\r\nimport { FileInfo } from \"../ToolPanel/ToolPanel\";\r\nimport axios from \"axios\";\r\nimport { openNotification } from \"../Notification/Notification\";\r\nimport { Alert, message, notification } from \"antd\";\r\n\r\ntype EditorDidMountParams = Parameters<OnMount>;\r\n\r\nexport let Monaco: EditorDidMountParams[1];\r\nexport let Editor: EditorDidMountParams[0];\r\nexport const scrollInfo: any = {};\r\n\r\nconst EditorComponent = () => {\r\n  const { context, setContext } = useAppContext();\r\n  const [value, setValue] = useState<string>(\"\");\r\n  const EditorRef = useRef<EditorDidMountParams[0]>();\r\n  const MonacoRef = useRef<EditorDidMountParams[1]>();\r\n\r\n  useEffect(() => {\r\n    setEditorData(Context.fileManagerOpenedFile);\r\n    Emitter.on(\"open_file\", (file: FileInfo) => {\r\n      setEditorData(file);\r\n    });\r\n    Emitter.on(\"editor_update\", (data) => {\r\n      setValue(data.value);\r\n    });\r\n  }, []);\r\n\r\n  function setEditorData(file: FileInfo): void {\r\n    if (Editor) {\r\n      let model = Editor.getModel();\r\n\r\n      if (model) {\r\n        Monaco.editor.setModelLanguage(model, getModeFromExt(file.ext));\r\n        setValue(getFileContent(file));\r\n      }\r\n    }\r\n  }\r\n\r\n  function getFileContent(file: FileInfo): string {\r\n    return typeof file.content === \"object\" ? \"\" : file.content;\r\n  }\r\n\r\n  function getModeFromExt(ext: string | undefined): string {\r\n    switch (ext) {\r\n      case \".js\":\r\n        return \"javascript\";\r\n      case \".css\":\r\n        return \"text/css\";\r\n      case \".html\":\r\n        return \"text/html\";\r\n      default:\r\n        return \"\";\r\n    }\r\n  }\r\n\r\n  const onChange = (value: any, ev: any): void => {\r\n    const file = {\r\n      value,\r\n      file: Context.fileManagerOpenedFile.path,\r\n    };\r\n\r\n    setValue(value);\r\n    socketRef.current?.emit(\"editor_data\", file);\r\n    Emitter.emit(\"editor_update_self\", file);\r\n  };\r\n\r\n  const handleEditorDidMount = (\r\n    editor: EditorDidMountParams[0],\r\n    monaco: EditorDidMountParams[1]\r\n  ) => {\r\n    EditorRef.current = editor;\r\n    MonacoRef.current = monaco;\r\n\r\n    Monaco = monaco;\r\n    Editor = editor;\r\n\r\n    editor.addAction({\r\n      id: \"addNotice\",\r\n      label: \"Add Notice\",\r\n      contextMenuGroupId: \"2_modification\",\r\n      contextMenuOrder: 0,\r\n      run: (editor: EditorDidMountParams[0]) => {\r\n        let sel = editor.getSelection();\r\n\r\n        if (sel !== null) {\r\n          if (sel.endLineNumber - sel.startLineNumber !== 0) {\r\n            Context.noticePos = sel;\r\n            Context.isNoticeAddWindowOpened = true;\r\n\r\n            Emitter.emit(\"open_notice_add\");\r\n          } else {\r\n            notification.info({\r\n              message: \"Code fragment cannot be empty!\",\r\n              description:\r\n                \"Try to select some code fragment and add notice again!\",\r\n            });\r\n          }\r\n        }\r\n      },\r\n    });\r\n\r\n    if (VIEW_TYPE === \"streamer\") {\r\n      editor.addAction({\r\n        id: \"saveAaction\",\r\n        label: \"Save Current File\",\r\n        contextMenuGroupId: \"9_cutcopypaste\",\r\n        contextMenuOrder: 0,\r\n        keybindings: [monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_S],\r\n        run: (editor: EditorDidMountParams[0]) => {\r\n          axios\r\n            .post(HOST + Context.url + \"/savefile\", {\r\n              filePath: Context.fileManagerOpenedFile.path,\r\n              content: editor.getValue(),\r\n            })\r\n            .then(() => {\r\n\r\n              Emitter.emit(\"output_reload\");\r\n            })\r\n            .catch((err) => {\r\n              openNotification({\r\n                message: \"Save file error!\",\r\n                description: \"Unexpected error saving file!\\n\" + err.message,\r\n                type: \"error\",\r\n              });\r\n            });\r\n        },\r\n      });\r\n    }\r\n\r\n    editor.updateOptions({\r\n      roundedSelection: true,\r\n      scrollBeyondLastLine: false,\r\n      smoothScrolling: true,\r\n      readOnly: VIEW_TYPE == \"streamer\" ? false : true,\r\n    });\r\n\r\n    monaco.editor.defineTheme(\"vs-dark-custom\", {\r\n      base: \"vs-dark\",\r\n      inherit: true,\r\n      rules: [],\r\n      colors: {\r\n        \"editor.selectionBackground\": \"#e6e6e625\",\r\n        \"editor.inactiveSelectionBackground\": \"#e6e6e615\",\r\n      },\r\n    });\r\n    monaco.editor.setTheme(\"vs-dark-custom\");\r\n\r\n    editor.onDidScrollChange((e) => {\r\n      if (Context.isSrcollEventActive) {\r\n        Emitter.emit(\"notice_will_scroll\", e);\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <MonacoEditor\r\n        className={\"CodeMirror_custom\"}\r\n        defaultLanguage=\"javascript\"\r\n        defaultValue=\"\"\r\n        theme=\"vs-dark\"\r\n        value={value}\r\n        onChange={onChange}\r\n        onMount={handleEditorDidMount}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditorComponent;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport LayoutComponent from \"../LayoutComponent/LayoutComponent\";\r\nimport \"antd/dist/antd.less\";\r\nimport \"antd/dist/antd.dark.less\";\r\n// import \"./App.css\";\r\nimport AppStyle from \"./App.module.css\";\r\nimport \"./App.less\";\r\nimport AppContext, { AppContextType, Context } from \"./AppContext\";\r\nimport EventEmitter from \"events\";\r\nimport { io, Socket } from \"socket.io-client\";\r\nimport { DefaultEventsMap } from \"socket.io-client/build/typed-events\";\r\nimport { openNotification } from \"../Notification/Notification\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  Input,\r\n  message,\r\n  Modal,\r\n  notification,\r\n  Spin,\r\n  Typography,\r\n} from \"antd\";\r\nimport axios from \"axios\";\r\nimport { useBeforeunload } from \"react-beforeunload\";\r\nimport { LoadingOutlined } from \"@ant-design/icons\";\r\n\r\nconst { Text } = Typography;\r\n\r\nexport type ViewType = \"streamer\" | \"viewer\";\r\n\r\nexport let VIEW_TYPE: ViewType;\r\n\r\nexport const Emitter = new EventEmitter();\r\n\r\nexport let socketRef: React.MutableRefObject<\r\n  Socket<DefaultEventsMap, DefaultEventsMap> | undefined\r\n>;\r\n\r\n// export const HOST: string = \"http://localhost:4000/\";\r\nexport const HOST: string = \"/\";\r\n\r\nlet updateNum = 0;\r\nlet data: any;\r\n\r\nfunction App() {\r\n  const [update, setUpdate] = useState(updateNum);\r\n  const [isLoading, setIsLoading] = useState<boolean>(true);\r\n  const [isModal, setIsModal] = useState<boolean>(false);\r\n  const [isNameLoading, setIsNameLoading] = useState<boolean>(false);\r\n  const [inputName, setInputName] = useState<string>(\"\");\r\n  const [contextState, setContextState] = useState<AppContextType>(Context);\r\n  socketRef = useRef<Socket<DefaultEventsMap, DefaultEventsMap>>();\r\n\r\n  function forceUpdate() {\r\n    setUpdate(++updateNum);\r\n  }\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(HOST + Context.url + \"/viewtype\")\r\n      .then((response) => {\r\n        data = response.data;\r\n\r\n        console.log(data);\r\n\r\n        if (!data.name) {\r\n          setIsModal(true);\r\n        } else {\r\n          afterNameEdit(data.viewtype, data.name);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        openNotification({\r\n          message: <Text type=\"danger\">{\"Connection error\\n\"}</Text>,\r\n          description: err.message,\r\n          type: \"error\",\r\n        });\r\n      });\r\n\r\n    return () => {\r\n      socketRef.current?.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  const afterNameEdit = (vtype: ViewType, name: string) => {\r\n    VIEW_TYPE = vtype;\r\n    Context.username = name || \"user\";\r\n    // VIEW_TYPE = window.confirm(\"Are you streamer\") ? \"streamer\" : \"viewer\";\r\n    // Context.username = VIEW_TYPE === \"streamer\" ? \"Streamer\" : \"Viewer\";\r\n\r\n    setIsLoading(false);\r\n\r\n    socketRef.current = io(HOST, {\r\n      reconnection: true,\r\n      transports: [\"websocket\"],\r\n      query: {\r\n        // roomId: \"86dd7a27421\",\r\n        roomId: Context.url,\r\n      },\r\n    });\r\n\r\n    socketRef.current.on(\"connect\", () => {\r\n      socketRef.current?.emit(\"viewer_connect\", Context.username);\r\n    });\r\n    socketRef.current.on(\"disconnect\", (reason) => {\r\n      console.log(\"disconnected by\", reason);\r\n\r\n      socketRef.current?.emit(\"viewer_disconnect\", Context.username);\r\n    });\r\n\r\n    socketRef.current.on(\"connect_error\", (err) => {\r\n      openNotification({\r\n        message: <Text type=\"danger\">{\"Socket connection error\\n\"}</Text>,\r\n        description: err.message,\r\n        type: \"error\",\r\n      });\r\n    });\r\n\r\n    // for both\r\n    socketRef.current?.on(\"chat_message\", (data) => {\r\n      Emitter.emit(\"chat_message\", data);\r\n    });\r\n\r\n    socketRef.current?.on(\"viewer_connect\", (data) => {\r\n      message.info(`User '${data}'connected`);\r\n\r\n      Emitter.emit(\"viewer_connect\");\r\n    });\r\n\r\n    socketRef.current?.on(\"viewer_disconnect\", (data) => {\r\n      message.warn(`User '${data}' disconnected`);\r\n    });\r\n\r\n    socketRef.current?.on(\"created_notice\", (data) => {\r\n      Emitter.emit(\"created_notice\", data);\r\n\r\n      notification.info({ message: `User ${data.author} added new notice!` });\r\n    });\r\n\r\n    Emitter.on(\"new_chat_message\", (data) => {\r\n      socketRef.current?.emit(\"new_chat_message\", data);\r\n    });\r\n\r\n    Emitter.on(\"create_notice\", (data) => {\r\n      socketRef.current?.emit(\"create_notice\", data);\r\n    });\r\n\r\n    // for viewers only\r\n    if (VIEW_TYPE === \"viewer\") {\r\n      socketRef.current?.on(\"editor_data_broadcast\", (data) => {\r\n        Emitter.emit(\"editor_data_broadcast\", data);\r\n      });\r\n\r\n      socketRef.current?.on(\"output_reloaded\", () => {\r\n        Emitter.emit(\"output_reload\");\r\n      });\r\n\r\n      socketRef.current?.on(\"closed_notice\", (data) => {\r\n        Emitter.emit(\"closed_notice\", data);\r\n      });\r\n    }\r\n\r\n    // for streamer only\r\n    else {\r\n      Emitter.on(\"output_reload\", () => {\r\n        socketRef.current?.emit(\"output_reload\");\r\n      });\r\n\r\n      Emitter.on(\"close_notice\", (data) => {\r\n        socketRef.current?.emit(\"close_notice\", data);\r\n      });\r\n    }\r\n  };\r\n\r\n  const [form] = Form.useForm();\r\n\r\n  const changeName = () => {\r\n    setIsLoading(true);\r\n    axios\r\n      .post(HOST + Context.url + \"/changename\", {\r\n        name: inputName,\r\n      })\r\n      .then(() => {})\r\n      .catch(() => {\r\n        notification.error({\r\n          message: <Text type=\"danger\">Set name error</Text>,\r\n          description:\r\n            \"Some error on server. You will be redirect to main page after 4 second!\",\r\n          placement: \"bottomLeft\",\r\n        });\r\n\r\n        setTimeout(() => window.location.replace(HOST), 4000);\r\n      })\r\n      .finally(() => {\r\n        setIsLoading(false);\r\n        setIsModal(false);\r\n        form.resetFields();\r\n      });\r\n  };\r\n\r\n  useBeforeunload(() => {\r\n    axios.post(HOST + Context.url + \"/disconnect\");\r\n    socketRef.current?.disconnect();\r\n\r\n    return \"You’ll lose your data!\";\r\n  });\r\n\r\n  return (\r\n    <div className={`App ${AppStyle.Dark}`}>\r\n      <Modal\r\n        visible={isModal}\r\n        afterClose={() => afterNameEdit(data.viewtype, inputName)}\r\n        title={\"Enter your name\"}\r\n        centered\r\n        footer={[\r\n          <Button\r\n            className=\"AppButton\"\r\n            key=\"start\"\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            form=\"name_edit\"\r\n            disabled={isNameLoading}\r\n          >\r\n            Ok\r\n          </Button>,\r\n        ]}\r\n      >\r\n        {isNameLoading ? (\r\n          <div\r\n            style={{\r\n              width: \"100%\",\r\n              height: \"100%\",\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              fontSize: \"8em\",\r\n            }}\r\n          >\r\n            <LoadingOutlined />\r\n          </div>\r\n        ) : (\r\n          <Form form={form} onFinish={changeName} name=\"name_edit\">\r\n            <Form.Item\r\n              name=\"Name\"\r\n              label=\"Type your name here\"\r\n              rules={[{ required: true }]}\r\n            >\r\n              <Input\r\n                value={inputName}\r\n                onChange={(e) => setInputName(e.target.value)}\r\n                allowClear\r\n              ></Input>\r\n            </Form.Item>\r\n          </Form>\r\n        )}\r\n      </Modal>\r\n      {isLoading ? (\r\n        <div\r\n          style={{\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          <Spin className=\"Spin\" size=\"large\" />\r\n        </div>\r\n      ) : (\r\n        <AppContext.Provider\r\n          value={{ context: contextState, setContext: setContextState }}\r\n        >\r\n          <LayoutComponent />\r\n        </AppContext.Provider>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { notification } from \"antd\";\r\nimport { NotificationPlacement } from \"antd/lib/notification\";\r\nimport { ReactNode } from \"react\";\r\n\r\nexport type NotificationType =\r\n  | \"success\"\r\n  | \"error\"\r\n  | \"info\"\r\n  | \"warning\"\r\n  | \"warn\"\r\n  | \"open\";\r\n\r\ninterface Args {\r\n  message: string | ReactNode;\r\n  description: string | ReactNode;\r\n  type: NotificationType;\r\n  placement?: NotificationPlacement;\r\n}\r\n\r\nexport const openNotification = ({\r\n  message,\r\n  description,\r\n  type,\r\n  placement = \"bottomLeft\",\r\n}: Args) => {\r\n  notification[type]({\r\n    message,\r\n    description,\r\n    placement,\r\n  });\r\n};\r\n\r\n\r\n","import React, { useState } from \"react\";\r\nimport { Button, Space, Select, Typography, notification } from \"antd\";\r\nimport {\r\n  CameraOutlined,\r\n  LoadingOutlined,\r\n  SyncOutlined,\r\n} from \"@ant-design/icons\";\r\nimport AppStyle from \"../App/App.module.css\";\r\n\r\nconst { Option } = Select;\r\nconst { Text } = Typography;\r\n\r\nconst Cam = () => {\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n\r\n  return (\r\n    <div className={AppStyle.Dark}>\r\n      <Space\r\n        direction=\"vertical\"\r\n        align=\"center\"\r\n        style={{ width: \"100%\", paddingTop: 20 }}\r\n        size=\"large\"\r\n      >\r\n        <div\r\n          style={{\r\n            width: 200,\r\n            height: 200,\r\n            backgroundColor: \"rgb(30,30,30)\",\r\n            borderRadius: 10,\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          {isLoading ? (\r\n            <LoadingOutlined style={{ fontSize: 100 }} />\r\n          ) : (\r\n            <CameraOutlined style={{ fontSize: 100 }} />\r\n          )}\r\n        </div>\r\n        <Button\r\n          onClick={(e) => {\r\n            setIsLoading(true);\r\n\r\n            setTimeout(() => {\r\n              notification.error({\r\n                message: <Text type=\"danger\">Camera error</Text>,\r\n                description:\r\n                  \"Some unextendable internal error. Try to reload page!\",\r\n                placement: \"bottomLeft\",\r\n              });\r\n              setIsLoading(false);\r\n            }, Math.random() * 5 * 1000);\r\n          }}\r\n          disabled={isLoading}\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          Start WebCam{\" \"}\r\n          {isLoading ? (\r\n            <SyncOutlined\r\n              spin\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n              }}\r\n            />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </Button>\r\n        <Space direction=\"vertical\" size=\"small\" style={{ width: 200 }}>\r\n          <Text>Cam settings:</Text>\r\n          <Select defaultValue=\"cam1\" style={{ width: \"100%\" }}>\r\n            <Option value=\"cam1\">Lenovo EasyCamera</Option>\r\n            <Option value=\"cam2\">Integrated Web camera</Option>\r\n          </Select>\r\n        </Space>\r\n      </Space>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cam;\r\n","import {\r\n  AudioMutedOutlined,\r\n  AudioOutlined,\r\n  CloseOutlined,\r\n  LoadingOutlined,\r\n} from \"@ant-design/icons\";\r\nimport {\r\n  Badge,\r\n  Button,\r\n  Form,\r\n  Input,\r\n  List,\r\n  Modal,\r\n  notification,\r\n  Space,\r\n  Switch,\r\n  Typography,\r\n} from \"antd\";\r\nimport axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Emitter, HOST } from \"../App/App\";\r\nimport AppStyle from \"../App/App.module.css\";\r\nimport { Context } from \"../App/AppContext\";\r\n\r\nconst { Paragraph, Text } = Typography;\r\n\r\ninterface User {\r\n  name: string;\r\n  muted: boolean;\r\n  isLoading: boolean;\r\n  _id: string;\r\n}\r\n\r\ninterface UserWhiteList {\r\n  name: string;\r\n  _id: string;\r\n}\r\n\r\nconst host = \"http://livecoding/\";\r\n\r\nconst Settings = () => {\r\n  const [projectName, setProjectName] = useState<string>(\"\");\r\n  const [projectType, setProjectType] = useState<string>(\"\");\r\n  const [link, setLink] = useState<string>(\"nf62hd8xbsgj\");\r\n  const [isWhiteList, setIsWhiteList] = useState<boolean>(false);\r\n  const [viewersArr, setViewersArr] = useState<User[]>([]);\r\n  const [whiteListArr, setWhiteListArr] = useState<UserWhiteList[]>([]);\r\n  const [isProjectNameLoading, setIsProjectNameLoading] =\r\n    useState<boolean>(true);\r\n  const [isProjectTypeLoading, setIsProjectTypeLoading] =\r\n    useState<boolean>(true);\r\n  const [isProjectLinkLoading, setIsProjectLinkLoading] =\r\n    useState<boolean>(true);\r\n  const [isProjectViewersLoading, setIsProjectViewersLoading] =\r\n    useState<boolean>(true);\r\n  const [isChangeMuteLoading, setIsChangeMuteLoading] =\r\n    useState<boolean>(false);\r\n  const [isWhiteListLoading, setIsWhiteListLoading] = useState<boolean>(true);\r\n  const [isAddButtonLoading, setIsAddButtonLoading] = useState<boolean>(false);\r\n  const [isAddModal, setIsAddModal] = useState<boolean>(false);\r\n  const [isAddLoading, setIsAddLoading] = useState<boolean>(false);\r\n  const [userIdValue, setUserIdValue] = useState<string>(\"\");\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(HOST + Context.url + \"/projectname\")\r\n      .then((response) => {\r\n        setProjectName(response.data);\r\n      })\r\n      .catch((err) =>\r\n        notification.error({\r\n          message: <Text type=\"danger\">Project name fetch error</Text>,\r\n          description:\r\n            \"Some error on server. Try to reload page!\\n\" + err.message,\r\n          placement: \"bottomLeft\",\r\n        })\r\n      )\r\n      .finally(() => setIsProjectNameLoading(false));\r\n\r\n    axios\r\n      .get(HOST + Context.url + \"/projecttype\")\r\n      .then((response) => {\r\n        setProjectType(response.data);\r\n      })\r\n      .catch((err) =>\r\n        notification.error({\r\n          message: <Text type=\"danger\">Project type fetch error</Text>,\r\n          description:\r\n            \"Some error on server. Try to reload page!\\n\" + err.message,\r\n          placement: \"bottomLeft\",\r\n        })\r\n      )\r\n      .finally(() => setIsProjectTypeLoading(false));\r\n\r\n    axios\r\n      .get(HOST + Context.url + \"/projectlink\")\r\n      .then((response) => {\r\n        setLink(response.data);\r\n      })\r\n      .catch((err) =>\r\n        notification.error({\r\n          message: <Text type=\"danger\">Project link fetch error</Text>,\r\n          description:\r\n            \"Some error on server. Try to reload page!\\n\" + err.message,\r\n          placement: \"bottomLeft\",\r\n        })\r\n      )\r\n      .finally(() => setIsProjectLinkLoading(false));\r\n\r\n    fetchViewers();\r\n\r\n    fetchWhiteList();\r\n\r\n    Emitter.on(\"viewer_connect\", () => {\r\n      setIsProjectViewersLoading(true);\r\n      fetchViewers();\r\n    });\r\n\r\n    Emitter.on(\"whitelist\", () => {\r\n      setIsWhiteListLoading(true);\r\n      fetchWhiteList();\r\n    });\r\n  }, []);\r\n\r\n  function fetchViewers() {\r\n    axios\r\n      .get(HOST + Context.url + \"/projectviewers\")\r\n      .then((response) => {\r\n        setViewersArr(response.data);\r\n      })\r\n      .catch((err) =>\r\n        notification.error({\r\n          message: <Text type=\"danger\">Project viewer fetch error</Text>,\r\n          description:\r\n            \"Some error on server. Try to reload page!\\n\" + err.message,\r\n          placement: \"bottomLeft\",\r\n        })\r\n      )\r\n      .finally(() => setIsProjectViewersLoading(false));\r\n  }\r\n\r\n  function fetchWhiteList() {\r\n    axios\r\n      .get(HOST + Context.url + \"/projectwhitelist\")\r\n      .then((response) => {\r\n        if (response.data) {\r\n          console.log(response.data);\r\n          setIsWhiteList(true);\r\n          setWhiteListArr(response.data);\r\n        } else {\r\n          setIsWhiteList(false);\r\n        }\r\n      })\r\n      .catch((err) =>\r\n        notification.error({\r\n          message: <Text type=\"danger\">Project white list fetch error</Text>,\r\n          description:\r\n            \"Some error on server. Try to reload page!\\n\" + err.message,\r\n          placement: \"bottomLeft\",\r\n        })\r\n      )\r\n      .finally(() => setIsWhiteListLoading(false));\r\n  }\r\n\r\n  const setProjectNameToServer = (value: string) => {\r\n    setIsProjectNameLoading(true);\r\n\r\n    axios\r\n      .post(HOST + Context.url + \"/changepojectname\", {\r\n        value,\r\n      })\r\n      .then(() => setProjectName(value))\r\n      .catch((err) =>\r\n        notification.error({\r\n          message: <Text type=\"danger\">Project name change error</Text>,\r\n          description:\r\n            \"Some error on server. Try to reload page!\\n\" + err.message,\r\n          placement: \"bottomLeft\",\r\n        })\r\n      )\r\n      .finally(() => setIsProjectNameLoading(false));\r\n  };\r\n\r\n  const changeMute = (name: string) => {\r\n    const user = viewersArr.filter((item) => item.name === name)[0];\r\n\r\n    user.isLoading = true;\r\n\r\n    setViewersArr(viewersArr);\r\n\r\n    axios\r\n      .post(HOST + Context.url + \"/changemute\", { name })\r\n      .then((response) => {\r\n        user.muted = response.data;\r\n\r\n        setViewersArr(\r\n          viewersArr.map((item) => ({ ...item, isLoading: false }))\r\n        );\r\n      })\r\n      .catch((err) =>\r\n        notification.error({\r\n          message: <Text type=\"danger\">User mute change error</Text>,\r\n          description:\r\n            \"Some error on server. Try to reload page!\\n\" + err.message,\r\n          placement: \"bottomLeft\",\r\n        })\r\n      )\r\n      .finally(() => setIsChangeMuteLoading(true));\r\n  };\r\n\r\n  const changeIsWhiteList = () => {\r\n    setIsWhiteListLoading(true);\r\n\r\n    axios\r\n      .post(HOST + Context.url + \"/changewhitelist\")\r\n      .then((response) => {\r\n        setIsWhiteList(response.data);\r\n      })\r\n      .catch((err) =>\r\n        notification.error({\r\n          message: <Text type=\"danger\">White list change error</Text>,\r\n          description:\r\n            \"Some error on server. Try to reload page!\\n\" + err.message,\r\n          placement: \"bottomLeft\",\r\n        })\r\n      )\r\n      .finally(() => setIsWhiteListLoading(false));\r\n  };\r\n\r\n  const onAddToListClick = () => {\r\n    axios\r\n      .post(HOST + Context.url + \"/addtowhitelist\", {})\r\n      .then(() => {\r\n        setIsWhiteListLoading(true);\r\n        fetchWhiteList();\r\n        notification.info({\r\n          message: \"User added to white list\",\r\n          placement: \"bottomLeft\",\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        notification.error({\r\n          message: <Text type=\"danger\">Add to white list error</Text>,\r\n          description:\r\n            \"Some error on server. Try to reload page!\\n\" + err.message,\r\n          placement: \"bottomLeft\",\r\n        });\r\n      })\r\n      .finally(() => {\r\n        setIsAddModal(false);\r\n        setIsAddButtonLoading(false);\r\n      });\r\n  };\r\n\r\n  const onAddClick = () => {\r\n    onAddToListClick();\r\n  };\r\n\r\n  const onBackModalClick = () => {\r\n    setIsAddModal(false);\r\n    setIsAddButtonLoading(false);\r\n    form.resetFields();\r\n  };\r\n\r\n  const [form] = Form.useForm();\r\n\r\n  return (\r\n    <div\r\n      className={AppStyle.Dark}\r\n      style={{ width: \"100%\", height: \"100%\", overflow: \"overlay\" }}\r\n    >\r\n      <Modal\r\n        title=\"Add user to white list\"\r\n        visible={isAddModal}\r\n        onCancel={onBackModalClick}\r\n        footer={[\r\n          <Button key=\"back\" onClick={onBackModalClick} disabled={isAddLoading}>\r\n            Close\r\n          </Button>,\r\n          <Button\r\n            className=\"AppButton\"\r\n            key=\"start\"\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            form=\"add_to_white_list\"\r\n            disabled={isAddLoading}\r\n          >\r\n            Add\r\n          </Button>,\r\n        ]}\r\n      >\r\n        {isAddLoading ? (\r\n          <div\r\n            style={{\r\n              width: \"100%\",\r\n              height: \"100%\",\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              fontSize: \"8em\",\r\n            }}\r\n          >\r\n            <LoadingOutlined />\r\n          </div>\r\n        ) : (\r\n          <Form onFinish={onAddClick} name={\"add_to_white_list\"} form={form}>\r\n            <Form.Item\r\n              name=\"User ID\"\r\n              label={<Text style={{ fontSize: \"1.2em\" }}>Type user id</Text>}\r\n              rules={[{ required: true }]}\r\n            >\r\n              <Input\r\n                value={userIdValue}\r\n                onChange={(e) => setUserIdValue(e.target.value)}\r\n                allowClear\r\n              />\r\n            </Form.Item>\r\n          </Form>\r\n        )}\r\n      </Modal>\r\n      <Space\r\n        direction=\"vertical\"\r\n        align=\"center\"\r\n        style={{ width: \"100%\", paddingTop: 20 }}\r\n        size=\"large\"\r\n      >\r\n        <Space direction=\"vertical\" size=\"small\" style={{ width: 200 }}>\r\n          <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n            <Text style={{ fontSize: 20, marginRight: 20 }}>Project name </Text>\r\n            {isProjectNameLoading && (\r\n              <LoadingOutlined style={{ fontSize: 20 }} />\r\n            )}\r\n          </div>\r\n          <Paragraph\r\n            editable={\r\n              !isProjectNameLoading && { onChange: setProjectNameToServer }\r\n            }\r\n            disabled={isProjectNameLoading}\r\n          >\r\n            {isProjectNameLoading ? <LoadingOutlined /> : projectName}\r\n          </Paragraph>\r\n        </Space>\r\n        <Space direction=\"vertical\" size=\"small\" style={{ width: 200 }}>\r\n          <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n            <Text style={{ fontSize: 20, marginRight: 20 }}>Project type </Text>\r\n            {isProjectTypeLoading && (\r\n              <LoadingOutlined style={{ fontSize: 20 }} />\r\n            )}\r\n          </div>\r\n          <Text code style={{ fontSize: 17 }}>\r\n            {isProjectTypeLoading ? <LoadingOutlined /> : projectType}\r\n          </Text>\r\n        </Space>\r\n        <Space direction=\"vertical\" size=\"small\" style={{ width: 200 }}>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"space-between\",\r\n            }}\r\n          >\r\n            <Text\r\n              style={{\r\n                fontSize: 20,\r\n              }}\r\n            >\r\n              Link\r\n            </Text>\r\n            <Text\r\n              type=\"success\"\r\n              style={\r\n                isProjectLinkLoading\r\n                  ? {\r\n                      padding: \"1px 10px\",\r\n                      border: \"1px solid #fff\",\r\n                      color: \"#fff\",\r\n                      borderRadius: 4,\r\n                      marginTop: 5,\r\n                      cursor: \"pointer\",\r\n                    }\r\n                  : {\r\n                      padding: \"1px 10px\",\r\n                      border: \"1px solid #0f0\",\r\n                      color: \"#0f0\",\r\n                      borderRadius: 4,\r\n                      marginTop: 5,\r\n                      cursor: \"pointer\",\r\n                    }\r\n              }\r\n            >\r\n              {isProjectLinkLoading ? <LoadingOutlined /> : \"Online\"}\r\n            </Text>\r\n          </div>\r\n          <Paragraph>\r\n            <Text style={{ fontSize: 13 }}>{host}</Text>\r\n            <Paragraph\r\n              strong\r\n              copyable={!isProjectLinkLoading && { text: host + link }}\r\n              style={{\r\n                border: \"1px solid #fff\",\r\n                borderRadius: 5,\r\n                width: \"max-content\",\r\n                padding: \"1px 10px\",\r\n                fontSize: 18,\r\n                marginTop: 6,\r\n              }}\r\n            >\r\n              {isProjectLinkLoading ? <LoadingOutlined /> : link}\r\n            </Paragraph>\r\n          </Paragraph>\r\n        </Space>\r\n        <Space direction=\"vertical\" size=\"small\" style={{ width: 200 }}>\r\n          <Badge\r\n            count={viewersArr.length}\r\n            size=\"default\"\r\n            offset={[-15, 5]}\r\n            style={{\r\n              backgroundColor: \"rgba(20,20,20,0.6)\",\r\n              borderColor: \"rgba(0,0,0,0)\",\r\n            }}\r\n          >\r\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n              <Text style={{ fontSize: 20, marginRight: 20 }}>Viewers</Text>\r\n              {isProjectViewersLoading && (\r\n                <LoadingOutlined style={{ fontSize: 20 }} />\r\n              )}\r\n            </div>\r\n          </Badge>\r\n\r\n          <List\r\n            loading={isProjectViewersLoading}\r\n            dataSource={viewersArr}\r\n            renderItem={(item) => (\r\n              <List.Item>\r\n                <Text>{item.name}</Text>\r\n                <Button\r\n                  onClick={(e) => {\r\n                    changeMute(item.name);\r\n                  }}\r\n                  danger={!item.isLoading && item.muted}\r\n                >\r\n                  {item.isLoading ? (\r\n                    <LoadingOutlined />\r\n                  ) : item.muted ? (\r\n                    <>\r\n                      Unmute <AudioMutedOutlined style={{ marginLeft: 10 }} />\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      Mute\r\n                      <AudioOutlined style={{ marginLeft: 10 }} />\r\n                    </>\r\n                  )}\r\n                </Button>\r\n              </List.Item>\r\n            )}\r\n            bordered\r\n            size=\"small\"\r\n            style={{ maxHeight: 150, overflow: \"overlay\" }}\r\n          />\r\n        </Space>\r\n        <Space direction=\"vertical\" size=\"small\" style={{ width: 200 }}>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"space-between\",\r\n            }}\r\n          >\r\n            <Text style={{ fontSize: 20, marginRight: 20 }}>White list</Text>{\" \"}\r\n            {isWhiteListLoading ? (\r\n              <LoadingOutlined />\r\n            ) : (\r\n              <Switch\r\n                defaultChecked={isWhiteList}\r\n                onChange={() => changeIsWhiteList()}\r\n              />\r\n            )}\r\n          </div>\r\n          {isWhiteList && (\r\n            <>\r\n              <List\r\n                loading={isWhiteListLoading}\r\n                dataSource={whiteListArr}\r\n                renderItem={(item) => (\r\n                  <List.Item>\r\n                    <Text>{item.name}</Text>\r\n                    <Button\r\n                      onClick={(e) =>\r\n                        setWhiteListArr(\r\n                          whiteListArr.filter(\r\n                            (item_in) => item._id !== item_in._id\r\n                          )\r\n                        )\r\n                      }\r\n                      danger={true}\r\n                    >\r\n                      <CloseOutlined />\r\n                    </Button>\r\n                  </List.Item>\r\n                )}\r\n                bordered\r\n                size=\"small\"\r\n                style={{ height: 150, overflow: \"overlay\" }}\r\n              />\r\n              <Button\r\n                style={{ width: \"100%\", marginBottom: 20 }}\r\n                onClick={() => {\r\n                  setIsAddButtonLoading(true);\r\n                  setIsAddModal(true);\r\n                }}\r\n              >\r\n                {isAddButtonLoading ? <LoadingOutlined /> : \"Add to list\"}\r\n              </Button>\r\n            </>\r\n          )}\r\n        </Space>\r\n      </Space>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n","import React from \"react\";\r\nimport { Comment, Avatar } from \"antd\";\r\nimport { UserOutlined } from \"@ant-design/icons\";\r\nimport Style from \"./ChatMessage.module.css\";\r\nimport AppStyle from \"../App/App.module.css\";\r\n\r\ninterface Props {\r\n  title: string;\r\n  content: string;\r\n  date: string\r\n}\r\n\r\nconst ChatMessage = ({ title, content, date }: Props) => {\r\n  return (\r\n    <div className={`${Style.ChatMessage} ${AppStyle.Dark}`}>\r\n      <Comment\r\n        author={title}\r\n        avatar={<Avatar icon={<UserOutlined />} />}\r\n        content={<p>{content}</p>}\r\n        datetime={<div className={Style.ChatMessage_Date}>{date}</div>}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatMessage;\r\n","import React, { useState, ReactNode, useEffect } from \"react\";\r\nimport ChatMessage from \"../ChatMessage/ChatMessage\";\r\nimport Style from \"./Chat.module.css\";\r\nimport AppStyle from \"../App/App.module.css\";\r\nimport { Input, Button } from \"antd\";\r\nimport Draggable from \"react-draggable\";\r\nimport { Message } from \"../ToolPanel/ToolPanel\";\r\nimport * as Scroll from \"react-scroll\";\r\nimport { Emitter } from \"../App/App\";\r\nimport { Context } from \"../App/AppContext\";\r\n\r\nconst { Search } = Input;\r\n\r\ninterface Props {\r\n  messages: Message[];\r\n  sourceMessages: Message[];\r\n  setMessageArr: (value: Message[]) => void;\r\n  setMessageCount: (value: number) => void;\r\n}\r\n\r\nconst Chat = ({\r\n  messages,\r\n  setMessageArr,\r\n  setMessageCount,\r\n  sourceMessages,\r\n}: Props) => {\r\n  const [inputText, setInputText] = useState<string>(\"\");\r\n\r\n  const messageToReactNode = (messages: Message[]) => {\r\n    return messages.map((item, index) => (\r\n      <ChatMessage\r\n        content={item.content}\r\n        title={item.title}\r\n        date={item.date}\r\n        key={index}\r\n      />\r\n    ));\r\n  };\r\n\r\n  useEffect(() => {\r\n    Scroll.scroller.scrollTo(\"scrollPointChat\", {\r\n      duration: 0,\r\n      delay: 0,\r\n      smooth: true,\r\n      containerId: \"scrollChat\",\r\n    });\r\n\r\n    Emitter.on(\"chat_message\", (data) => {\r\n      // sourceMessages.push(data);\r\n      // setMessageArr(sourceMessages);\r\n      Scroll.scroller.scrollTo(\"scrollPointChat\", {\r\n        duration: 0,\r\n        delay: 0,\r\n        smooth: true,\r\n        containerId: \"scrollChat\",\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  const onClick = () => {\r\n\r\n    if (inputText !== \"\") {\r\n      const message = {\r\n        content: inputText,\r\n        title: Context.username,\r\n        date: new Date().toLocaleString(),\r\n      };\r\n      sourceMessages.push(message);\r\n      setMessageArr(sourceMessages);\r\n      Scroll.scroller.scrollTo(\"scrollPointChat\", {\r\n        duration: 500,\r\n        delay: 0,\r\n        smooth: true,\r\n        containerId: \"scrollChat\",\r\n      });\r\n      Emitter.emit(\"new_chat_message\", message);\r\n      setInputText(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={`${Style.Chat} ${AppStyle.Dark}`}>\r\n      <div className={`${Style.Messages} ${AppStyle.DarkSecond}`} id=\"scrollChat\">\r\n        {messageToReactNode(messages)}\r\n        {<Scroll.Element name=\"scrollPointChat\" />}\r\n      </div>\r\n      <div className={Style.Input}>\r\n        <Search\r\n          allowClear\r\n          maxLength={100}\r\n          value={inputText}\r\n          onChange={(e) => {\r\n            setInputText(e.target.value);\r\n          }}\r\n          enterButton={<Button className={Style.InputButton}  type=\"primary\">Send</Button>}\r\n          onSearch={onClick}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n","import React from \"react\";\r\nimport { Card, Avatar } from \"antd\";\r\nimport {\r\n  UserOutlined,\r\n  CodeOutlined,\r\n  CloseCircleOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { NoticeItem } from \"../ToolPanel/ToolPanel\";\r\nimport { VIEW_TYPE } from \"../App/App\";\r\n\r\nconst { Meta } = Card;\r\n\r\ninterface Props {\r\n  data: NoticeItem;\r\n  closeNotice: (id: number) => void;\r\n  openNotice: (id: number) => void;\r\n}\r\n\r\nconst Notice = ({ data, closeNotice, openNotice }: Props) => {\r\n  const onCodeClick = () => {\r\n    // Doc.setCursor(70, 11);\r\n    openNotice(data.id);\r\n  };\r\n  const onCloseClick = () => {\r\n    closeNotice(data.id);\r\n  };\r\n  return (\r\n    <>\r\n      <Card\r\n        size=\"small\"\r\n        actions={\r\n          VIEW_TYPE === \"streamer\"\r\n            ? [\r\n                <CodeOutlined key=\"code\" onClick={onCodeClick} />,\r\n                <CloseCircleOutlined key=\"close\" onClick={onCloseClick} />,\r\n              ]\r\n            : [ <CodeOutlined key=\"code\" onClick={onCodeClick} />]\r\n        }\r\n      >\r\n        <Meta\r\n          avatar={<Avatar icon={<UserOutlined />} />}\r\n          title={data.title}\r\n          description={data.desc}\r\n        />\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Notice;\r\n","import React, { ReactNode, useEffect, useState } from \"react\";\r\nimport { List } from \"antd\";\r\nimport Notice from \"../Notice/Notice\";\r\nimport Style from \"./NotificationPanel.module.css\";\r\nimport AppStyle from \"../App/App.module.css\";\r\nimport { NoticeItem } from \"../ToolPanel/ToolPanel\";\r\nimport { Emitter } from \"../App/App\";\r\ninterface Props {\r\n  setNoticeCount: (count: number) => void;\r\n  setClosedNoticeArr: (prop: any) => void;\r\n  setNoticeArr: (prop: any) => void;\r\n  openNotice: (prop: number) => void;\r\n  data: NoticeItem[];\r\n  sourceNotices: NoticeItem[];\r\n  sourceClosedNotices: NoticeItem[];\r\n  setSourceNotices: (prop: any) => any;\r\n}\r\n\r\nconst NotificationPanel = ({\r\n  setNoticeCount,\r\n  setClosedNoticeArr,\r\n  setNoticeArr,\r\n  openNotice,\r\n  sourceNotices,\r\n  sourceClosedNotices,\r\n  setSourceNotices,\r\n  data,\r\n}: Props) => {\r\n  const closeNotice = (id: number): void => {\r\n    let notice: NoticeItem = sourceNotices.filter((item) => item.id === id)[0];\r\n\r\n    let newSourceNotices = setSourceNotices(sourceNotices.filter((item) => item.id !== notice?.id))\r\n    sourceClosedNotices.unshift(notice);\r\n\r\n    setNoticeArr(newSourceNotices);\r\n    setNoticeCount(newSourceNotices.length);\r\n    setClosedNoticeArr(sourceClosedNotices);\r\n\r\n    Emitter.emit(\"close_notice\", notice);\r\n  };\r\n\r\n  return (\r\n    <div className={`${Style.Notice} ${AppStyle.Dark}`}>\r\n      <List\r\n        dataSource={data.reverse()}\r\n        renderItem={(item) => {\r\n          return (\r\n            <div className={Style.Notice_Wrapper}>\r\n              <Notice\r\n                data={item}\r\n                closeNotice={closeNotice}\r\n                openNotice={openNotice}\r\n              />\r\n            </div>\r\n          );\r\n        }}\r\n        size=\"small\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotificationPanel;\r\n","import React, { useState } from \"react\";\r\nimport { Card, Avatar, Button, Typography } from \"antd\";\r\nimport Style from \"./ClosedNotice.module.css\";\r\nimport { UserOutlined, CodeOutlined } from \"@ant-design/icons\";\r\nimport { NoticeItem } from \"../ToolPanel/ToolPanel\";\r\n\r\ninterface Props {\r\n  data: NoticeItem;\r\n  openNotice: (prop: number) => void;\r\n}\r\n\r\nconst { Meta } = Card;\r\nconst { Text, Paragraph } = Typography;\r\n\r\nconst ClosedNotice = ({ data, openNotice }: Props) => {\r\n  const [isExpand, setIsExpand] = useState(false);\r\n\r\n  const toggleMeta = () => {\r\n    setIsExpand(!isExpand);\r\n  };\r\n\r\n  const onCodeClick = () => {\r\n    openNotice(data.id);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card\r\n        type=\"inner\"\r\n        size=\"small\"\r\n        title={\r\n          <Text ellipsis className={Style.ClosedNotice_Text}>\r\n            {data.title}\r\n          </Text>\r\n        }\r\n        extra={\r\n          isExpand ? (\r\n            <Button size=\"small\" onClick={toggleMeta}>\r\n              Close\r\n            </Button>\r\n          ) : (\r\n            <Button size=\"small\" onClick={toggleMeta}>\r\n              Open\r\n            </Button>\r\n          )\r\n        }\r\n        actions={\r\n          isExpand ? [<CodeOutlined key=\"code\" onClick={onCodeClick} />] : []\r\n        }\r\n      >\r\n        {isExpand ? (\r\n          <Meta\r\n            avatar={<Avatar icon={<UserOutlined />} />}\r\n            description={data.desc}\r\n          />\r\n        ) : (\r\n          <Paragraph ellipsis className={Style.ClosedNotice_Text}>\r\n            {data.desc}\r\n          </Paragraph>\r\n        )}\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ClosedNotice;\r\n","import React, { useState } from \"react\";\r\nimport { List } from \"antd\";\r\nimport ClosedNotice from \"../ClosedNotice/ClosedNotice\";\r\nimport Style from \"./ClosedNotificationPanel.module.css\";\r\nimport AppStyle from \"../App/App.module.css\";\r\nimport { NoticeItem } from \"../ToolPanel/ToolPanel\";\r\n\r\ninterface Props {\r\n  data: NoticeItem[];\r\n  openNotice: (prop: number) => void;\r\n}\r\n\r\nconst ClosedNotificationPanel = ({ data, openNotice }: Props) => {\r\n  return (\r\n    <div className={`${Style.Notice} ${AppStyle.Dark}`}>\r\n      <List\r\n        dataSource={data.reverse()}\r\n        renderItem={(item) => (\r\n          <div className={Style.Notice_Wrapper}>\r\n            <ClosedNotice data={item} openNotice={openNotice}/>\r\n          </div>\r\n        )}\r\n        size=\"small\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClosedNotificationPanel;\r\n","import React, { ReactNode, FC, ReactPortal, useEffect, useState } from \"react\";\r\nimport { Popover, Space } from \"antd\";\r\nimport { Typography } from \"antd\";\r\nimport { CloseCircleOutlined } from \"@ant-design/icons\";\r\nimport { NoticeItem } from \"../ToolPanel/ToolPanel\";\r\nimport { Context } from \"../App/AppContext\";\r\nimport { Editor } from \"../Editor/Editor\";\r\nimport { TooltipPlacement } from \"antd/lib/tooltip\";\r\nimport { Emitter } from \"../App/App\";\r\n\r\nconst { Text } = Typography;\r\n\r\ninterface Props {\r\n  children?: ReactNode[] | Element[] | Element | ReactPortal;\r\n  data: NoticeItem;\r\n  isOpened: boolean;\r\n  setIsOpened: (val: boolean) => void;\r\n  contentWidget: any;\r\n  placement: TooltipPlacement;\r\n}\r\n\r\nconst EditorNotice: FC<Props> = ({\r\n  children,\r\n  data,\r\n  isOpened,\r\n  setIsOpened,\r\n  contentWidget,\r\n  placement,\r\n}: Props) => {\r\n  return (\r\n    <Popover\r\n      placement={placement}\r\n      visible={isOpened}\r\n      destroyTooltipOnHide\r\n      content={\r\n        <>\r\n          <div className={\"CoolMan\"}>\r\n            <Text type=\"secondary\" strong style={{ fontSize: \"0.8em\" }}>\r\n              from {data.author}\r\n            </Text>\r\n          </div>\r\n          <div style={{ padding: \"5px 0px\", fontSize: \"1.2em\", maxWidth: 400 }}>\r\n            {data.desc}\r\n          </div>\r\n        </>\r\n      }\r\n      title={\r\n        <Space style={{ width: \"100%\", justifyContent: \"space-between\" }}>\r\n          {data.title}\r\n          {\r\n            <a\r\n              onClick={() => {\r\n                setIsOpened(false);\r\n                Context.isSrcollEventActive = false;\r\n                Context.decorations = Editor.deltaDecorations(\r\n                  Context.decorations,\r\n                  []\r\n                );\r\n                if (contentWidget) Editor.removeContentWidget(contentWidget);\r\n              }}\r\n            >\r\n              <CloseCircleOutlined />\r\n            </a>\r\n          }\r\n        </Space>\r\n      }\r\n      trigger={\"contextMenu\"}\r\n    >\r\n      {children}\r\n    </Popover>\r\n  );\r\n};\r\n\r\nexport default EditorNotice;\r\n","import React from \"react\";\r\nimport \"codemirror/lib/codemirror.css\";\r\nimport \"../Editor/Editor.css\";\r\nimport MonacoEditor, { OnMount } from \"@monaco-editor/react\";\r\n\r\ntype EditorDidMountParams = Parameters<OnMount>;\r\n\r\ninterface Props {\r\n  value: string;\r\n  lineStart: number;\r\n  lineCount: number;\r\n}\r\n\r\nconst EDITOR_PADDING: number = 10;\r\nconst LINE_HEIGHT: number = 19;\r\nconst MAX_LINE_COUNT: number = 12;\r\nconst MAX_LINE_HEIGHT: number = 250;\r\n\r\nconst NoticeEditor = ({ value, lineStart, lineCount }: Props) => {\r\n  const handleEditorDidMount = (\r\n    editor: EditorDidMountParams[0],\r\n    monaco: EditorDidMountParams[1]\r\n  ) => {\r\n    editor.updateOptions({\r\n      roundedSelection: true,\r\n      scrollBeyondLastLine: false,\r\n      readOnly: true,\r\n      minimap: {\r\n        enabled: false,\r\n      },\r\n      lineNumbers: (num) => lineStart + num - 1 + \"\",\r\n      padding: { bottom: EDITOR_PADDING, top: EDITOR_PADDING },\r\n    });\r\n\r\n    monaco.editor.defineTheme(\"vs-dark-custom\", {\r\n      base: \"vs-dark\",\r\n      inherit: true,\r\n      rules: [],\r\n      colors: {\r\n        \"editor.selectionBackground\": \"#e6e6e625\",\r\n        \"editor.inactiveSelectionBackground\": \"#e6e6e615\",\r\n      },\r\n    });\r\n    monaco.editor.setTheme(\"vs-dark-custom\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <MonacoEditor\r\n        className={\"CodeMirror_custom\"}\r\n        defaultLanguage=\"javascript\"\r\n        defaultValue={value}\r\n        theme=\"vs-dark\"\r\n        value={value}\r\n        onMount={handleEditorDidMount}\r\n        height={\r\n          lineCount > MAX_LINE_COUNT\r\n            ? MAX_LINE_HEIGHT\r\n            : (lineCount + 1) * LINE_HEIGHT + EDITOR_PADDING * 2\r\n        }\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NoticeEditor;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Drawer, Form, Input, Space } from \"antd\";\r\nimport { Context, useAppContext } from \"../App/AppContext\";\r\nimport NoticeEditor from \"../NoticeEditor/NoticeEditor\";\r\nimport Text from \"antd/lib/typography/Text\";\r\nimport { Editor, Monaco } from \"../Editor/Editor\";\r\nimport { Emitter } from \"../App/App\";\r\n\r\ninterface Props {\r\n  createNotice: (values: any) => void;\r\n}\r\n\r\nconst { TextArea } = Input;\r\n\r\nconst layout = {\r\n  labelCol: { span: 8 },\r\n  wrapperCol: { span: 16 },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: { span: 16 },\r\n};\r\nconst editorLayout = {\r\n  wrapperCol: { offset: 0, span: 24 },\r\n};\r\n\r\nconst NoticeAddComponent = ({ createNotice }: Props) => {\r\n  const { context, setContext } = useAppContext();\r\n  const [isOpened, setIsOpened] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    Emitter.on(\"open_notice_add\", () => {\r\n      setIsOpened(Context.isNoticeAddWindowOpened);\r\n    });\r\n    setIsOpened(Context.isNoticeAddWindowOpened);\r\n  });\r\n\r\n  const [form] = Form.useForm();\r\n\r\n  const onFinish = (values: any) => {\r\n    // console.log(context.fileManagerOpenedFile);\r\n    setIsOpened(false);\r\n    Context.isNoticeAddWindowOpened = false;\r\n    createNotice(values);\r\n  };\r\n\r\n  const onReset = () => {\r\n    form.resetFields();\r\n  };\r\n\r\n  const getValueOfSelection = (): string => {\r\n    if (Editor === undefined || !isOpened) return \"\";\r\n    let selectedLinesText: string = \"\";\r\n\r\n    for (\r\n      let i = Context.noticePos.startLineNumber;\r\n      i < Context.noticePos.endLineNumber + 1;\r\n      i++\r\n    ) {\r\n      selectedLinesText += Editor.getModel()?.getLineContent(i);\r\n      if (i != Context.noticePos.endLineNumber) {\r\n        selectedLinesText += \"\\n\";\r\n      }\r\n    }\r\n\r\n    return selectedLinesText;\r\n  };\r\n\r\n  return (\r\n    <Drawer\r\n      title=\"Create notice\"\r\n      width={500}\r\n      placement=\"right\"\r\n      closable\r\n      destroyOnClose\r\n      onClose={() => {\r\n        Context.isNoticeAddWindowOpened = false;\r\n        setIsOpened(false);\r\n        form.resetFields();\r\n        Emitter.emit(\"close_notice_add\");\r\n      }}\r\n      visible={isOpened}\r\n      footer={\r\n        <div\r\n          style={{\r\n            textAlign: \"right\",\r\n          }}\r\n        >\r\n          <Button\r\n            onClick={() => {\r\n              Context.isNoticeAddWindowOpened = false;\r\n              setIsOpened(false);\r\n              form.resetFields();\r\n              Emitter.emit(\"close_notice_add\");\r\n            }}\r\n            style={{ marginRight: 8 }}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            htmlType=\"button\"\r\n            onClick={onReset}\r\n            style={{ marginRight: 8 }}\r\n          >\r\n            Reset\r\n          </Button>\r\n          <Button\r\n            className=\"AppButton\"\r\n            onClick={() => {}}\r\n            htmlType=\"submit\"\r\n            form=\"notice_add\"\r\n            type=\"primary\"\r\n          >\r\n            Create\r\n          </Button>\r\n        </div>\r\n      }\r\n    >\r\n      <Form {...layout} form={form} name=\"notice_add\" onFinish={onFinish}>\r\n        <Form.Item\r\n          name=\"Question\"\r\n          label=\"Question\"\r\n          rules={[{ required: true }]}\r\n        >\r\n          <Input allowClear />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"Description\"\r\n          label=\"Description\"\r\n          rules={[{ required: true }]}\r\n        >\r\n          <TextArea allowClear showCount maxLength={300} rows={6} />\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Text strong style={{ fontSize: \"1.2em\" }}>\r\n            Lines selected:\r\n          </Text>\r\n        </Form.Item>\r\n        <Form.Item {...editorLayout} style={{ minHeight: 300 }}>\r\n          <NoticeEditor\r\n            value={getValueOfSelection()}\r\n            lineStart={Context.noticePos.startLineNumber}\r\n            lineCount={\r\n              Context.noticePos.endLineNumber -\r\n              Context.noticePos.startLineNumber\r\n            }\r\n          />\r\n        </Form.Item>\r\n      </Form>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default NoticeAddComponent;\r\n","import React, { useState, ReactNode, useEffect } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Space, Badge, Drawer, Button, Typography } from \"antd\";\r\nimport FileManager from \"../FileManager/FileManager\";\r\nimport Cam from \"../Cam/Cam\";\r\nimport Settings from \"../Settings/Settings\";\r\nimport Chat from \"../Chat/Chat\";\r\nimport NotificationPanel from \"../NotificationPanel/NotificationPanel\";\r\nimport ClosedNotificationPanel from \"../ClosedNotificationPanel/ClosedNotificationPanel\";\r\nimport {\r\n  FileOutlined,\r\n  WechatOutlined,\r\n  CameraOutlined,\r\n  SettingOutlined,\r\n  BellOutlined,\r\n  BookOutlined,\r\n} from \"@ant-design/icons\";\r\nimport Style from \"./ToolPanel.module.css\";\r\nimport AppStyle from \"../App/App.module.css\";\r\nimport { Editor, Monaco, scrollInfo } from \"../Editor/Editor\";\r\nimport EditorNotice from \"../EditorNotice/EditorNotice\";\r\nimport { Context, useAppContext } from \"../App/AppContext\";\r\nimport NoticeAddComponent from \"../NoticeAddComponent/NoticeAddComponent\";\r\nimport { Size } from \"../WorkSpace/WorkSpace\";\r\nimport MonacoRef from \"monaco-editor\";\r\nimport { Emitter, HOST, socketRef, VIEW_TYPE } from \"../App/App\";\r\nimport { TooltipPlacement } from \"antd/lib/tooltip\";\r\nimport axios from \"axios\";\r\nimport { openNotification } from \"../Notification/Notification\";\r\nimport { Resizable } from \"re-resizable\";\r\n\r\ninterface Props {\r\n  setToolPanelSize: (state: any) => any;\r\n}\r\n\r\nexport interface NoticeItem {\r\n  id: number;\r\n  title: string;\r\n  desc: string;\r\n  author: string;\r\n  position: MonacoRef.IRange;\r\n  currentFile: string;\r\n}\r\n\r\nexport interface Message {\r\n  content: string;\r\n  title: string;\r\n  date: string;\r\n}\r\n\r\nexport interface FileInfo {\r\n  name: string;\r\n  path: string;\r\n  isDirectory: boolean;\r\n  ext: string;\r\n  size: number;\r\n  content: string;\r\n  children: FileInfo[];\r\n}\r\n\r\ninterface Tool {\r\n  icon: ReactNode;\r\n  name: string;\r\n}\r\n\r\nconst { Text } = Typography;\r\n\r\nlet closedNotices: NoticeItem[] = [];\r\nlet notices: NoticeItem[] = [];\r\nlet messages: Message[] = [];\r\nlet directory: FileInfo[] = [];\r\nlet openedToolVar: string = \"\";\r\nlet isOpenedToolVar: boolean = false;\r\nlet newMessages: number = 0;\r\nlet updateNum = 0;\r\n\r\nconst TOOL_PANEL_WIDTH: number = 250;\r\nconst noticePoint = document.createElement(\"div\");\r\n\r\nconst ToolPanel = ({ setToolPanelSize }: Props) => {\r\n  const { context, setContext } = useAppContext();\r\n\r\n  const [isOpened, setIsOpened] = useState<boolean>(false);\r\n  const [isNoticeOpened, setIsNoticeOpened] = useState<boolean>(false);\r\n  const [openedTool, setOpenedTool] = useState<string>(\"\");\r\n  const [noticeCount, setNoticeCount] = useState<number>(notices.length);\r\n  const [messageCount, setMesssageCount] = useState<number>(newMessages);\r\n  const [messageArr, setMessageArr] = useState<Message[]>(messages);\r\n  const [closedNoticeArr, setClosedNoticeArr] =\r\n    useState<NoticeItem[]>(closedNotices);\r\n  const [noticeArr, setNoticeArr] = useState<NoticeItem[]>(notices);\r\n  const [openedNoticeId, setOpenedNoticeId] = useState<number>(0);\r\n  const [size, setSize] = useState<Size>({ width: \"0px\", height: \"100%\" });\r\n  const [expandedKeys, setExpandedKeys] = useState<string[]>([]);\r\n  const [placement, setPlacement] = useState<TooltipPlacement>(\"topLeft\");\r\n  const [filesArr, setFilesArr] = useState<FileInfo[]>(directory);\r\n  const [update, setUpdate] = useState<number>(updateNum);\r\n\r\n  function forceUpdate() {\r\n    setUpdate(++updateNum);\r\n  }\r\n\r\n  let contentWidget;\r\n\r\n  useEffect(() => {\r\n    Emitter.on(\"close_notice_add\", () => {});\r\n\r\n    Emitter.on(\"notice_will_scroll\", (e) => {\r\n      const popover = document.getElementsByClassName(\"CoolMan\")[0];\r\n      const wOffset = noticePoint.offsetTop;\r\n      const sOffset = e.scrollTop;\r\n      const offset = wOffset - sOffset;\r\n\r\n      if (popover) {\r\n        const parent: HTMLElement | null = popover.closest(\".ant-popover \");\r\n\r\n        if (!parent) return;\r\n\r\n        if (parent?.classList.contains(\"ant-popover-placement-bottomLeft\")) {\r\n          parent.style.top = offset + 17 + \"px\";\r\n        } else {\r\n          parent.style.top = offset - parent.offsetHeight - 2 + \"px\";\r\n        }\r\n      }\r\n    });\r\n\r\n    axios\r\n      .get(HOST + Context.url + \"/directory\")\r\n      .then((json) => {\r\n        json.data.sort((a: FileInfo, b: FileInfo) => {\r\n          if (a.isDirectory) return -1;\r\n          else if (b.isDirectory) return 0;\r\n          return 1;\r\n        });\r\n\r\n        directory = json.data;\r\n        setFilesArr(directory);\r\n      })\r\n      .catch((err) => {\r\n        openNotification({\r\n          message: <Text type=\"danger\">Files fetch error.</Text>,\r\n          description:\r\n            \"Unexpected error on server! Try to reload page.\\n\" + err,\r\n          type: \"error\",\r\n        });\r\n      });\r\n\r\n    axios\r\n      .get(HOST + Context.url + \"/chat_messages\")\r\n      .then((json) => {\r\n        messages = json.data;\r\n        setMessageArr(messages);\r\n        setMesssageCount(messages.length);\r\n        newMessages = messages.length;\r\n      })\r\n      .catch((err) => {\r\n        openNotification({\r\n          message: <Text type=\"danger\">Chat messages fetch error.</Text>,\r\n          description:\r\n            \"Unexpected error on server! Try to reload page.\\n\" + err,\r\n          type: \"error\",\r\n        });\r\n      });\r\n\r\n    axios\r\n      .get(HOST + Context.url + \"/notices\")\r\n      .then((json) => {\r\n        notices = json.data;\r\n        setNoticeArr(notices);\r\n        setNoticeCount(notices.length);\r\n      })\r\n      .catch((err) => {\r\n        openNotification({\r\n          message: <Text type=\"danger\">Notices fetch error.</Text>,\r\n          description:\r\n            \"Unexpected error on server! Try to reload page.\\n\" + err,\r\n          type: \"error\",\r\n        });\r\n      });\r\n\r\n    axios\r\n      .get(HOST + Context.url + \"/closednotices\")\r\n      .then((json) => {\r\n        closedNotices = json.data;\r\n        setClosedNoticeArr(closedNotices);\r\n      })\r\n      .catch((err) => {\r\n        openNotification({\r\n          message: <Text type=\"danger\">Closed notices fetch error.</Text>,\r\n          description:\r\n            \"Unexpected error on server! Try to reload page.\\n\" + err,\r\n          type: \"error\",\r\n        });\r\n      });\r\n\r\n    Emitter.on(\"chat_message\", (data) => {\r\n      messages.push(data);\r\n\r\n      if (isOpenedToolVar) {\r\n        if (openedToolVar !== \"chat\") {\r\n          newMessages++;\r\n          setMesssageCount(newMessages);\r\n        }\r\n      } else {\r\n        newMessages++;\r\n        setMesssageCount(newMessages);\r\n      }\r\n\r\n      setMessageArr(messages);\r\n      forceUpdate();\r\n    });\r\n\r\n    Emitter.on(\"editor_data_broadcast\", (data) => {\r\n      directory.forEach((item) => {\r\n        if (item.path === data.file) {\r\n          item.content = data.value;\r\n\r\n          setFilesArr(directory);\r\n        }\r\n      });\r\n\r\n      if (Context.fileManagerOpenedFile.path === data.file) {\r\n        Context.fileManagerOpenedFile.content = data.value;\r\n        Emitter.emit(\"editor_update\", data);\r\n      }\r\n    });\r\n\r\n    if (VIEW_TYPE === \"streamer\") {\r\n      Emitter.on(\"editor_update_self\", (data) => {\r\n        console.log(\"here\");\r\n\r\n        directory.forEach((item) => {\r\n          if (item.path === data.file) {\r\n            item.content = data.value;\r\n\r\n            setFilesArr(directory);\r\n          }\r\n        });\r\n      });\r\n    }\r\n\r\n    Emitter.on(\"closed_notice\", (data) => {\r\n      notices = notices.filter((item) => item.id !== data.id);\r\n      closedNotices.unshift(data);\r\n\r\n      setNoticeArr(notices);\r\n      setNoticeCount(notices.length);\r\n      setClosedNoticeArr(closedNotices);\r\n    });\r\n\r\n    Emitter.on(\"created_notice\", (data) => {\r\n      notices.unshift(data);\r\n\r\n      setNoticeArr(notices);\r\n      setNoticeCount(notices.length);\r\n    });\r\n  }, []);\r\n\r\n  function setSourceNotices(noticesArr: NoticeItem[]): NoticeItem[] {\r\n    notices = noticesArr;\r\n\r\n    return notices;\r\n  }\r\n\r\n  const tools: Tool[] =\r\n    VIEW_TYPE === \"streamer\"\r\n      ? [\r\n          { icon: <FileOutlined />, name: \"file\" },\r\n          {\r\n            icon: (\r\n              <Badge\r\n                className={`${Style.Badge} ${AppStyle.HoverText}`}\r\n                count={messageCount}\r\n                overflowCount={100}\r\n                size=\"small\"\r\n                offset={[-5, 0]}\r\n                title={\"Unread messages\"}\r\n              >\r\n                <WechatOutlined className={Style.ToolPanel_Icons} />\r\n              </Badge>\r\n            ),\r\n            name: \"chat\",\r\n          },\r\n          { icon: <CameraOutlined />, name: \"cam\" },\r\n          { icon: <SettingOutlined />, name: \"settings\" },\r\n          {\r\n            icon: (\r\n              <Badge\r\n                className={`${Style.Badge} ${AppStyle.HoverText}`}\r\n                count={noticeCount}\r\n                overflowCount={9}\r\n                size=\"small\"\r\n                offset={[-5, 0]}\r\n                title={\"Unread messages\"}\r\n              >\r\n                <BellOutlined className={Style.ToolPanel_Icons} />\r\n              </Badge>\r\n            ),\r\n            name: \"notice\",\r\n          },\r\n          { icon: <BookOutlined />, name: \"closed_notice\" },\r\n        ]\r\n      : [\r\n          { icon: <FileOutlined />, name: \"file\" },\r\n          {\r\n            icon: (\r\n              <Badge\r\n                className={`${Style.Badge} ${AppStyle.HoverText}`}\r\n                count={messageCount}\r\n                overflowCount={100}\r\n                size=\"small\"\r\n                offset={[-5, 0]}\r\n                title={\"Unread messages\"}\r\n              >\r\n                <WechatOutlined className={Style.ToolPanel_Icons} />\r\n              </Badge>\r\n            ),\r\n            name: \"chat\",\r\n          },\r\n          {\r\n            icon: (\r\n              <Badge\r\n                className={`${Style.Badge} ${AppStyle.HoverText}`}\r\n                count={noticeCount}\r\n                overflowCount={9}\r\n                size=\"small\"\r\n                offset={[-5, 0]}\r\n                title={\"Unread messages\"}\r\n              >\r\n                <BellOutlined className={Style.ToolPanel_Icons} />\r\n              </Badge>\r\n            ),\r\n            name: \"notice\",\r\n          },\r\n          { icon: <BookOutlined />, name: \"closed_notice\" },\r\n        ];\r\n\r\n  Context.placement = \"topLeft\";\r\n\r\n  const openNotice = (id: number) => {\r\n    if (isNoticeOpened) {\r\n      setIsNoticeOpened(false);\r\n      Editor.deltaDecorations(Context.decorations, []);\r\n      Context.isSrcollEventActive = false;\r\n    }\r\n\r\n    const notice = getNoticeFromId(id);\r\n\r\n    if (Context.fileManagerOpenedFile.path !== notice.currentFile) {\r\n      Emitter.emit(\"notice_open_file\", { path: notice.currentFile });\r\n    }\r\n\r\n    Editor.revealLineInCenter(getNoticeFromId(id).position.startLineNumber, 0);\r\n\r\n    let scrollTop = Editor.getScrollTop();\r\n    let place: number;\r\n\r\n    if (notice.position.startLineNumber < 10) {\r\n      place = notice.position.endLineNumber;\r\n      Context.placement = \"bottomLeft\";\r\n    } else {\r\n      place = notice.position.startLineNumber;\r\n      Context.placement = \"topLeft\";\r\n    }\r\n\r\n    setPlacement(Context.placement);\r\n\r\n    contentWidget = {\r\n      getId: function () {\r\n        return \"my.content.widget\";\r\n      },\r\n      getDomNode: function () {\r\n        return noticePoint;\r\n      },\r\n      getPosition: function () {\r\n        return {\r\n          position: {\r\n            lineNumber: place,\r\n            column:\r\n              (notice.position.endColumn - notice.position.startColumn) / 2,\r\n          },\r\n          preference: [\r\n            Monaco.editor.ContentWidgetPositionPreference.ABOVE,\r\n            Monaco.editor.ContentWidgetPositionPreference.BELOW,\r\n          ],\r\n        };\r\n      },\r\n    };\r\n    Editor.addContentWidget(contentWidget);\r\n\r\n    Context.decorations = Editor.deltaDecorations(\r\n      [],\r\n      [\r\n        {\r\n          range: notice.position,\r\n          options: {\r\n            isWholeLine: true,\r\n            className: \"noticeLineSelected\",\r\n            marginClassName: \"noticeLineSelectedMargin\",\r\n            glyphMarginClassName: \"noticeLineSelectedGlyph\",\r\n            hoverMessage: { value: `${notice.title} from ${notice.author}` },\r\n          },\r\n        },\r\n      ]\r\n    );\r\n\r\n    setOpenedNoticeId(id);\r\n    setIsNoticeOpened(true);\r\n    Context.isSrcollEventActive = true;\r\n  };\r\n\r\n  const toolsToComponents = (tools: Tool[]): ReactNode[] => {\r\n    return tools.map((item) => (\r\n      <div\r\n        key={item.name}\r\n        className={`${Style.Icon} ${AppStyle.HoverText}`}\r\n        onClick={(e) => onIconClick(e, item.name)}\r\n      >\r\n        {item.icon}\r\n      </div>\r\n    ));\r\n  };\r\n\r\n  const openToolPanel = (id: string) => {\r\n    setOpenedTool(id);\r\n    openedToolVar = id;\r\n    setIsOpened(true);\r\n    isOpenedToolVar = true;\r\n    setSize({ width: TOOL_PANEL_WIDTH + \"px\", height: \"100%\" });\r\n    // setToolPanelSize({ width: TOOL_PANEL_WIDTH + \"px\", height: \"100%\" });\r\n\r\n    if (openedToolVar === \"chat\") {\r\n      newMessages = 0;\r\n      setMesssageCount(newMessages);\r\n    }\r\n  };\r\n\r\n  const closeToolPanel = () => {\r\n    // setToolPanelSize({ width: \"50px\", height: \"100%\" });\r\n    setSize({ width: \"0px\", height: \"100%\" });\r\n    setIsOpened(false);\r\n    isOpenedToolVar = false;\r\n  };\r\n\r\n  const onIconClick = (e: any, id: string) => {\r\n    if (isOpened) {\r\n      if (openedTool != id) {\r\n        openToolPanel(id);\r\n        openedToolVar = id;\r\n      } else closeToolPanel();\r\n    } else {\r\n      openToolPanel(id);\r\n      openedToolVar = id;\r\n    }\r\n  };\r\n\r\n  const createNotice = (values: any) => {\r\n    const author: string = Context.username;\r\n    const pos = Context.noticePos;\r\n    const notice = {\r\n      id: noticeArr.length + closedNoticeArr.length + 1,\r\n      title: values.Question,\r\n      desc: values.Description,\r\n      author,\r\n      position: pos,\r\n      currentFile: Context.fileManagerOpenedFile.path,\r\n    };\r\n\r\n    notices.unshift(notice);\r\n\r\n    setNoticeArr(notices);\r\n    setNoticeCount(notices.length);\r\n\r\n    Emitter.emit(\"create_notice\", notice);\r\n  };\r\n\r\n  const getToolComponentByName = (name: string): ReactNode => {\r\n    switch (name) {\r\n      case \"file\":\r\n        return (\r\n          <FileManager\r\n            data={filesArr}\r\n            expanded={expandedKeys}\r\n            setExpanded={setExpandedKeys}\r\n          />\r\n        );\r\n      case \"chat\":\r\n        return (\r\n          <Chat\r\n            key={update}\r\n            sourceMessages={messages}\r\n            messages={messageArr}\r\n            setMessageArr={setMessageArr}\r\n            setMessageCount={setMesssageCount}\r\n          />\r\n        );\r\n      case \"notice\":\r\n        return (\r\n          <NotificationPanel\r\n            data={noticeArr}\r\n            setSourceNotices={setSourceNotices}\r\n            sourceNotices={notices}\r\n            sourceClosedNotices={closedNotices}\r\n            setNoticeCount={setNoticeCount}\r\n            setClosedNoticeArr={setClosedNoticeArr}\r\n            setNoticeArr={setNoticeArr}\r\n            openNotice={openNotice}\r\n          />\r\n        );\r\n      case \"closed_notice\":\r\n        return (\r\n          <ClosedNotificationPanel\r\n            data={closedNoticeArr}\r\n            openNotice={openNotice}\r\n          />\r\n        );\r\n      case \"cam\":\r\n        return <Cam />;\r\n      case \"settings\":\r\n        return <Settings />;\r\n    }\r\n  };\r\n\r\n  const getNoticeFromId = (id: number): NoticeItem => {\r\n    return [...noticeArr, ...closedNoticeArr].filter(\r\n      (item) => item.id === id\r\n    )[0];\r\n  };\r\n\r\n  let toolPanelRezisable: any;\r\n\r\n  return (\r\n    <div className={`${Style.Wrapper}`}>\r\n      <Space\r\n        className={`${Style.ToolPanel_Icons} ${Style.ToolPanel_Space} ${AppStyle.DarkSecond}`}\r\n        style={{ width: 50, minWidth: 50 }}\r\n        direction=\"vertical\"\r\n      >\r\n        {toolsToComponents(tools)}\r\n      </Space>\r\n      <Resizable\r\n        ref={(c) => {\r\n          toolPanelRezisable = c;\r\n        }}\r\n        enable={{\r\n          top: false,\r\n          right: true,\r\n          bottom: false,\r\n          left: false,\r\n          topRight: false,\r\n          bottomRight: false,\r\n          bottomLeft: false,\r\n          topLeft: false,\r\n        }}\r\n        defaultSize={{ width: 0, height: \"100%\" }}\r\n        style={{\r\n          transition: \"width 0.35s ease\",\r\n          overflow: \"overlay\",\r\n        }}\r\n        size={size}\r\n        minWidth={0}\r\n        maxWidth={250}\r\n        onResizeStop={(e, direction, ref, d) => {\r\n          setSize({\r\n            width: parseInt(size.width) + d.width + \"px\",\r\n            height: \"100%\",\r\n          });\r\n        }}\r\n      >\r\n        {getToolComponentByName(openedTool)}\r\n      </Resizable>\r\n\r\n      {isNoticeOpened && (\r\n        <>\r\n          {ReactDOM.createPortal(\r\n            <div\r\n              style={{\r\n                position: \"absolute\",\r\n                top: 13,\r\n              }}\r\n            >\r\n              <EditorNotice\r\n                placement={placement}\r\n                data={getNoticeFromId(openedNoticeId)}\r\n                isOpened={isNoticeOpened}\r\n                setIsOpened={setIsNoticeOpened}\r\n                contentWidget={contentWidget}\r\n              ></EditorNotice>\r\n            </div>,\r\n            noticePoint\r\n          )}\r\n        </>\r\n      )}\r\n      <NoticeAddComponent createNotice={createNotice} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ToolPanel;\r\n","import React, { ReactNode, useEffect, useRef, useState } from \"react\";\r\nimport { Typography } from \"antd\";\r\nimport { Emitter, HOST } from \"../App/App\";\r\nimport * as Scroll from \"react-scroll\";\r\nimport Style from \"./OutputWindow.module.css\";\r\nimport AppStyle from \"../App/App.module.css\";\r\nimport {\r\n  ClearOutlined,\r\n  VerticalAlignBottomOutlined,\r\n  VerticalAlignTopOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Context } from \"../App/AppContext\";\r\n\r\nlet stateNum = 0;\r\nlet stateOutputNum = 0;\r\nlet consoleValueString: ReactNode[] = [];\r\nconst { Text } = Typography;\r\n\r\nconst OutputWindow = () => {\r\n  const [state, setState] = useState(0);\r\n  const [stateOutput, setStateOutput] = useState(0);\r\n  const [consoleValue, setConsoleValue] =\r\n    useState<ReactNode[]>(consoleValueString);\r\n  const [isLoading, setIsLoading] = useState<boolean>(true);\r\n  const [consoleOutputHeight, setConsoleOutputHeight] =\r\n    useState<string>(\"100%\");\r\n  const [consoleOutputOverflow, setConsoleOutputOverflow] =\r\n    useState<string>(\"overlay\");\r\n  const [iframeHeight, setIframeHeight] = useState<string>(\"80%\");\r\n  const [isCollaped, setIsCollaped] = useState<boolean>(false);\r\n  const ref = React.createRef<HTMLIFrameElement>();\r\n\r\n  useEffect(() => {\r\n    function handler() {\r\n      setState(++stateNum);\r\n    }\r\n    function handlerOutput() {\r\n      setStateOutput(++stateOutputNum);\r\n    }\r\n\r\n    Emitter.on(\"output_reload\", handler);\r\n\r\n    window.addEventListener(\"message\", function (response) {\r\n      if (response.data && response.data.source === \"iframe\") {\r\n        let el;\r\n        if (response.data.message[0] === \"error\") {\r\n          const parsed = response.data.message[1].url.split(\"/\");\r\n          el = (\r\n            <div className={Style.ConsoleItem} key={consoleValueString.length}>\r\n              <Text type={\"danger\"} code>\r\n                {response.data.message[1].error.stack}\r\n              </Text>\r\n              <Text type={\"secondary\"} underline strong className={Style.fileAndLine}>\r\n                {parsed[parsed.length - 1] +\r\n                  \":\" +\r\n                  response.data.message[1].lineNo}\r\n              </Text>\r\n            </div>\r\n          );\r\n        } else {\r\n          el = (\r\n            <div className={Style.ConsoleItem} key={consoleValueString.length}>\r\n              <Text type={\"secondary\"} code>\r\n                {response.data.message\r\n                  .slice(2)\r\n                  .map((item: any) => JSON.stringify(item))\r\n                  .join(\" \")}\r\n              </Text>\r\n              <Text type={\"secondary\"} underline strong className={Style.fileAndLine}>\r\n                {response.data.message[1]}\r\n              </Text>\r\n            </div>\r\n          );\r\n        }\r\n        consoleValueString.push(el);\r\n        setConsoleValue(consoleValueString);\r\n        handlerOutput();\r\n\r\n        Scroll.scroller.scrollTo(\"scrollPoint\", {\r\n          duration: 500,\r\n          delay: 0,\r\n          smooth: true,\r\n          containerId: \"scroll\",\r\n        });\r\n      }\r\n    });\r\n\r\n    // ref.current?.contentDocument?.\r\n\r\n    return () => {\r\n      Emitter.off(\"output_reload\", handler);\r\n    };\r\n  }, []);\r\n\r\n  const clearConsole = () => {\r\n    consoleValueString = [];\r\n    setConsoleValue(consoleValueString);\r\n  };\r\n  const collapseConsole = () => {\r\n    if (isCollaped) {\r\n      setConsoleOutputHeight(\"100%\");\r\n      setIframeHeight(\"80%\");\r\n      setConsoleOutputOverflow(\"overlay\");\r\n      setIsCollaped(false);\r\n    } else {\r\n      setConsoleOutputHeight(\"0%\");\r\n      setConsoleOutputOverflow(\"hidden\");\r\n      setIframeHeight(\"95%\");\r\n      setIsCollaped(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ width: \"100%\", height: \"100%\" }} className={AppStyle.Dark}>\r\n      <iframe\r\n        className={Style.Iframe}\r\n        ref={ref}\r\n        src= {HOST + \"static/\" + Context.url}\r\n        frameBorder=\"0\"\r\n        style={{ width: \"100%\", height: iframeHeight }}\r\n        key={state}\r\n        id={\"iframe\"}\r\n      ></iframe>\r\n\r\n      <div\r\n        className={`${Style.Console} ${AppStyle.Dark}`}\r\n        style={{\r\n          height: \"20%\",\r\n        }}\r\n      >\r\n        <div className={`${Style.ConsoleMenu} ${AppStyle.DarkSecond}`}>\r\n          <Text\r\n            type=\"secondary\"\r\n            style={{ color: \"rgba(190, 190, 190, 0.623)\", margin: \"0px 5px\" }}\r\n          >\r\n            Console\r\n          </Text>\r\n\r\n          <div className={Style.ConsoleMenuButtons}>\r\n            <ClearOutlined className={Style.Button} onClick={clearConsole} />\r\n            {isCollaped ? (\r\n              <VerticalAlignTopOutlined\r\n                className={AppStyle.HoverText}\r\n                onClick={collapseConsole}\r\n              />\r\n            ) : (\r\n              <VerticalAlignBottomOutlined\r\n                className={AppStyle.HoverText}\r\n                onClick={collapseConsole}\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div\r\n          key={stateOutput}\r\n          className={Style.ConsoleOutput}\r\n          id=\"scroll\"\r\n          style={{\r\n            height: consoleOutputHeight,\r\n            overflow: consoleOutputOverflow,\r\n            transition: \"hieght .35s ease\"\r\n          }}\r\n        >\r\n          {/* <div style={{ height: \"max-content\" }}>{consoleValue}</div> */}\r\n          {consoleValue}\r\n          {<Scroll.Element name=\"scrollPoint\" />}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OutputWindow;\r\n","import { useState } from \"react\";\r\nimport WorkSpaceItem from \"../WorkSpaceItem/WorkSpaceItem\";\r\nimport EditorComponent from \"../Editor/Editor\";\r\nimport ToolPanel from \"../ToolPanel/ToolPanel\";\r\nimport OutputWindow from \"../OutputWindow/OutputWindow\";\r\nimport Style from \"./WorkSpace.module.css\";\r\nimport { Resizable } from \"re-resizable\";\r\n\r\nexport interface Size {\r\n  width: string;\r\n  height: string;\r\n}\r\n\r\nconst style: any = {\r\n  display: \"flex\",\r\n  width: \"100%\",\r\n  flexShrink: 1,\r\n};\r\n\r\nconst enable = {\r\n  top: false,\r\n  right: true,\r\n  bottom: false,\r\n  left: false,\r\n  topRight: false,\r\n  bottomRight: false,\r\n  bottomLeft: false,\r\n  topLeft: false,\r\n};\r\n\r\nlet toolPanelRezisable: any;\r\n\r\nconst WorkSpace = () => {\r\n  const defToolPanelSize = {\r\n    width: \"10px\",\r\n    height: \"100%\",\r\n  };\r\n  const [toolPanelSize, setToolPanelSize] = useState<Size>({\r\n    width: \"max-content\",\r\n    height: \"100%\",\r\n  });\r\n  const [editorSize, setEditorSize] = useState<Size>({\r\n    width: \"100px\",\r\n    height: \"100%\",\r\n  });\r\n  const [outputSize, setOutputSize] = useState<Size>({\r\n    width: \"400px\",\r\n    height: \"100%\",\r\n  });\r\n\r\n  function updateToolPanelSize(size: Size): void {\r\n    setToolPanelSize(size);\r\n\r\n    toolPanelRezisable.updateSize(size);\r\n  }\r\n\r\n  return (\r\n    <div className={Style.WorkSpace}>\r\n      <WorkSpaceItem size={toolPanelSize}>\r\n        <ToolPanel setToolPanelSize={setToolPanelSize} />\r\n      </WorkSpaceItem>\r\n      <Resizable\r\n        style={{ backgroundColor: \"#1b1b1b\", flexGrow: 1 }}\r\n        size={editorSize}\r\n        enable={enable}\r\n        defaultSize={editorSize}\r\n        onResizeStop={(e, direction, ref, d) => {\r\n          setEditorSize({\r\n            width: parseInt(editorSize.width) + d.width + \"px\",\r\n            height: \"100%\",\r\n          });\r\n        }}\r\n      >\r\n        <WorkSpaceItem size={{ width: \"100%\", height: \"100%\" }}>\r\n          <EditorComponent />\r\n        </WorkSpaceItem>\r\n      </Resizable>\r\n      <Resizable\r\n        style={{ backgroundColor: \"#1b1b1b\" }}\r\n        size={outputSize}\r\n        enable={{ ...enable, left: true, right: false }}\r\n        defaultSize={outputSize}\r\n        minWidth={\"15%\"}\r\n        maxWidth={\"80%\"}\r\n        onResizeStop={(e, direction, ref, d) => {\r\n          setOutputSize({\r\n            width: parseInt(outputSize.width) + d.width + \"px\",\r\n            height: \"100%\",\r\n          });\r\n        }}\r\n      >\r\n        <WorkSpaceItem size={{ width: \"100%\", height: \"100%\" }}>\r\n          <OutputWindow />\r\n        </WorkSpaceItem>\r\n      </Resizable>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WorkSpace;\r\n","import React from \"react\";\r\nimport { Layout } from \"antd\";\r\nimport WorkSpace from \"../WorkSpace/WorkSpace\";\r\nconst { Content } = Layout;\r\n\r\nconst LayoutComponent = () => {\r\n  return (\r\n    <Layout style={{height: \"100%\"}}>\r\n      <Content>\r\n        <WorkSpace />\r\n      </Content>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default LayoutComponent;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./components/App/App\";\r\nimport dotenv from \"dotenv\";\r\n\r\ndotenv.config();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ToolPanel_Icons\":\"ToolPanel_ToolPanel_Icons__3vMI8\",\"ToolPanel_Space\":\"ToolPanel_ToolPanel_Space__21Vbq\",\"Wrapper\":\"ToolPanel_Wrapper__2VDXt\",\"ToolPanel_OpenedTool\":\"ToolPanel_ToolPanel_OpenedTool__3B8ZD\",\"Icon\":\"ToolPanel_Icon__3WgFO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ConsoleItem\":\"OutputWindow_ConsoleItem__2vfJN\",\"Console\":\"OutputWindow_Console__g3APw\",\"Iframe\":\"OutputWindow_Iframe__178YI\",\"ConsoleOutput\":\"OutputWindow_ConsoleOutput__2w6el\",\"ConsoleMenu\":\"OutputWindow_ConsoleMenu__2hM3U\",\"ConsoleMenuButtons\":\"OutputWindow_ConsoleMenuButtons__2GWdI\",\"Button\":\"OutputWindow_Button__11b6a\",\"FileAndLine\":\"OutputWindow_FileAndLine__Pf3As\"};"],"sourceRoot":""}